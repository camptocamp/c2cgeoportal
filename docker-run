#!/usr/bin/env python3

import sys
import os
import subprocess
import netifaces
import distutils.sysconfig


def main():

    args = sys.argv[1:]
    docker_cmd = ['docker', 'run']

    root = False
    if args[0] == '--root':
        args = args[1:]
        root = True

    if args[0][0] == '-':
        docker_cmd.append(args[0])
        args = args[1:]

    git_branch = subprocess.check_output(["git", "rev-parse", "--abbrev-ref", "HEAD"]).decode("utf-8").strip()

    docker_cmd.extend([
        "--rm",
        "--volume=/var/run/docker.sock:/var/run/docker.sock",
        "--volume=c2cgeoportal-build:/build",
        "--volume={pwd}:/src".format(pwd=os.getcwd()),
        "--volume={home}:{home}".format(home=os.environ["HOME"]),
        "--volume=/tmp/travis:/tmp/travis",
        "--env=USER_NAME={}".format(os.getlogin()),
        "--env=USER_ID={}".format(os.getuid() if os.name == "posix" else 1000),
        "--env=GROUP_ID={}".format(os.getgid() if os.name == "posix" else 1000),
        "--env=CODACY_PROJECT_TOKEN={}".format(os.environ.get("CODACY_PROJECT_TOKEN", "")),
        "--env=GIT_BRANCH={}".format(git_branch)
    ])

    for env in [
        "HOME",
        "TRAVIS",
        "TRAVIS_BRANCH",
        "TRAVIS_JOB_ID",
        "SRID",
        "EXTENT",
        "APACHE_VHOST",
    ]:
        docker_cmd.append("--env={}".format(env))

    docker_adrs = netifaces.ifaddresses('docker0')[2][0]['addr']
    docker_cmd.append("--env=DOCKER_HOST_={}".format(docker_adrs))
    docker_cmd.append("--env=BUILD_VOLUME_NAME=c2cgeoportal-build")
    docker_cmd.append("--env=PROJECT_DIRECTORY={}".format(os.getcwd()))
    docker_cmd.append("--env=PYTHON_PATH={}".format(distutils.sysconfig.get_python_lib()))

    if root:
        docker_cmd.extend(["--entrypoint", args[0]])
        args = args[1:]

    docker_cmd.append("camptocamp/geomapfish-build-dev")
    docker_cmd.extend(args)
    try:
        subprocess.check_call(docker_cmd)
    except subprocess.CalledProcessError:
        exit(2)


if __name__ == "__main__":
    main()
