[app:app]
use = egg:{{package}}
project = {{package}}
reload_templates = true
debug_authorization = false
debug_notfound = false
debug_routematch = false
debug_templates = true
mako.directories = {{package}}:templates
    c2cgeoportal:templates
app.cfg = %(here)s/config.yaml
# Used to create secured cookies
authtkt_secret: ${authtkt_secret}
# Database informations
sqlalchemy.url: postgresql://${dbuser}:${dbpassword}@${dbhost}:${dbport}/${db}
schema: ${vars:schema}
parentschema: ${vars:parent_schema}
# For tilecache controller
tilecache.cfg: ${buildout:directory}/tilecache/tilecache.cfg
# For debug mode
jsbuild_cfg: ${jsbuild:config}
jsbuild_root_dir: ${buildout:directory}

[filter:fanstatic]
use = egg:fanstatic#fanstatic
publisher_signature = fanstatic
base_url = /${vars:instanceid}/wsgi
recompute_hashes = false
versioning = false
bottom = true
minified = true

[pipeline:main]
pipeline =
    egg:WebError#evalerror
    fanstatic
    app

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = ${vars:waitress_port}

# Begin logging configuration

[loggers]
keys = root, c2cgeoportal, {{package_logger}}

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_c2cgeoportal]
level = DEBUG
handlers =
qualname = c2cgeoportal

[logger_{{package_logger}}]
level = DEBUG
handlers =
qualname = {{package}}

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
