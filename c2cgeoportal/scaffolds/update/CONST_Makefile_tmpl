PYTHON_VERSION = $(shell .build/venv/bin/python -c "import sys; print('%i.%i' % (sys.version_info.major, sys.version_info.minor))" 2> /dev/null)
PACKAGE = {{package}}

# Don't minify the js / css, ...
DEVELOPMENT ?= FALSE
# Language provided by the application
LANGUAGES ?= en fr de
# Enable CGXP build
CGXP ?= TRUE
# Enable sencha touch build
MOBILE ?= TRUE
# Enable ngeo build
NGEO ?= FALSE
# Use TileCloud chain
TILECLOUD_CHAIN ?= TRUE
# Use print V2
PRINT2 ?= FALSE
# Use print V3
PRINT3 ?= TRUE

ifeq ($(CGXP), TRUE)
DEFAULT_WEB_RULE += build-cgxp
endif
ifeq ($(MOBILE), TRUE)
DEFAULT_WEB_RULE += sencha-touch
endif
ifeq ($(NGEO), TRUE)
DEFAULT_WEB_RULE += build-ngeo
CLIENT_CHECH_RULE ?= lint-ngeo
endif
WEB_RULE ?= $(DEFAULT_WEB_RULE)

# Make rules

DEFAULT_BUILD_RULES ?= test-packages eggs $(WEB_RULE) build-server
ifeq ($(TILECLOUD_CHAIN), TRUE)
DEFAULT_BUILD_RULES += test-packages-tilecloud-chain
endif
ifeq ($(MOBLE), TRUE)
DEFAULT_BUILD_RULES += test-packages-mobile
endif
ifeq ($(NGEO), TRUE)
DEFAULT_BUILD_RULES += test-packages-ngeo
endif
ifeq ($(PRINT2), TRUE)
DEFAULT_BUILD_RULES += print
endif
ifeq ($(PRINT3), TRUE)
DEFAULT_BUILD_RULES += print
endif
BUILD_RULES ?= $(PRE_RULES) $(filter-out $(DISABLE_BUILD_RULES),$(DEFAULT_BUILD_RULES)) $(POST_RULES)

# Requirements

REQUIREMENTS += \
	--index-url http://pypi.camptocamp.net/pypi \
	--find-links http://pypi.camptocamp.net/internal-pypi/index/c2cgeoportal \
	--find-links http://pypi.camptocamp.net/internal-pypi/index/c2cgeoportal-win \
	--trusted-host pypi.camptocamp.net \
	-r CONST_versions.txt \
	-e git+https://github.com/camptocamp/pyramid_closure\#egg=pyramid_closure \
	-e .
# The version 1.5.3 of Shapely is buggy see Toblerity/Shapely#231
DEV_REQUIREMENTS += \
	--index-url http://pypi.camptocamp.net/pypi \
	--trusted-host pypi.camptocamp.net \
	Shapely==1.5.3 \
	flake8 \
	pep8-naming \
	'c2c.template>=1.0.1dev3' \
	pyramid_debugtoolbar \
	c2c.versions
ifeq ($(TILECLOUD_CHAIN), TRUE)
DEV_REQUIREMENTS += 'tilecloud-chain>=1.0.0dev'
endif
ifeq ($(CGXP), TRUE)
DEV_REQUIREMENTS += jsbuild c2c.cssmin
endif
ifeq ($(NGEO), TRUE)
DEV_REQUIREMENTS += http://closure-linter.googlecode.com/files/closure_linter-latest.tar.gz
endif

OUTPUT_DIR = $(PACKAGE)/static/build

# ngeo
OL_JS_FILES = $(shell find node_modules/openlayers/src/ol -type f -name '*.js' 2> /dev/null)
NGEO_JS_FILES = $(shell find node_modules/ngeo/src -type f -name '*.js' 2> /dev/null)
APP_JS_FILES = $(shell find $(PACKAGE)/static/js -type f -name '*.js')
APP_HTML_FILES = $(shell find $(PACKAGE)/templates -type f -name '*.html')
LESS_FILES = $(shell find $(PACKAGE)/static/less -type f -name '*.less' 2> /dev/null)
JSON_CLIENT_LOCALISATION_FILES = $(addprefix $(OUTPUT_DIR)/locale/, $(addsuffix /$(PACKAGE).json, $(LANGUAGES)))

# CGXP
JSBUILD_MAIN_FILES = $(shell find $(PACKAGE)/static/lib/cgxp $(PACKAGE)/static/js -name "*.js" -print 2> /dev/null)
JSBUILD_MAIN_CONFIG = jsbuild/app.cfg
JSBUILD_MAIN_OUTPUT_FILES ?= app.js edit.js routing.js api.js xapi.js
JSBUILD_MAIN_OUTPUT_FILES += $(addprefix lang-, $(addsuffix .js, $(LANGUAGES)))
JSBUILD_MAIN_OUTPUT_FILES += $(addprefix api-lang-, $(addsuffix .js, $(LANGUAGES)))
JSBUILD_MAIN_OUTPUT_FILES := $(addprefix $(OUTPUT_DIR)/, $(JSBUILD_MAIN_OUTPUT_FILES))
JSBUILD_MOBILE_CONFIG = jsbuild/mobile.cfg
JSBUILD_MOBILE_OUTPUT_DIR = $(PACKAGE)/static/mobile/
JSBUILD_MOBILE_OUTPUT_FILES = $(addprefix $(JSBUILD_MOBILE_OUTPUT_DIR), openlayers-mobile.js)
JSBUILD_ARGS = $(if ifeq($(DEVELOPMENT), ‘TRUE’),-u,)

CSS_BASE_FILES += \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/ext-all.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/xtheme-gray.css \
	$(PACKAGE)/static/lib/cgxp/openlayers/theme/default/style.css \
	$(PACKAGE)/static/lib/cgxp/geoext/resources/css/popup.css \
	$(PACKAGE)/static/lib/cgxp/geoext/resources/css/gxtheme-gray.css \
	$(PACKAGE)/static/lib/cgxp/geoext.ux/ux/Measure/resources/css/measure.css \
	$(PACKAGE)/static/lib/cgxp/sandbox/FeatureEditing/resources/css/feature-editing.css \
	$(PACKAGE)/static/lib/cgxp/styler/theme/css/styler.css \
	$(PACKAGE)/static/lib/cgxp/gxp/src/theme/all.css \
	$(PACKAGE)/static/lib/cgxp/core/src/theme/all.css \
	$(PACKAGE)/static/lib/cgxp/ext.ux/ColorPicker/ressources/colorpicker.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/examples/ux/css/Spinner.css \
	$(PACKAGE)/static/css/proj.css \
	$(PACKAGE)/static/css/proj-map.css \
	$(PACKAGE)/static/css/proj-widgets.css
CSS_BASE_OUTPUT = $(OUTPUT_DIR)/app.css

CSS_API_FILES += \
	$(PACKAGE)/static/lib/cgxp/openlayers/theme/default/style.css \
	$(PACKAGE)/static/css/proj-map.css
CSS_API_OUTPUT = $(OUTPUT_DIR)/api.css

CSS_XAPI_FILES += \
	$(PACKAGE)/static/lib/cgxp/core/src/theme/reset.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/visual/editor.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/visual/pivotgrid.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/visual/menu.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/visual/panel.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/visual/grid.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/visual/debug.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/visual/qtips.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/visual/dd.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/visual/form.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/visual/resizable.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/visual/toolbar.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/visual/slider.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/visual/combo.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/visual/layout.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/visual/dialog.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/visual/core.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/visual/button.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/visual/progress.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/visual/tabs.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/visual/box.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/visual/borders.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/visual/date-picker.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/visual/tree.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/visual/window.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/visual/list-view.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/structure/editor.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/structure/pivotgrid.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/structure/menu.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/structure/panel.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/structure/grid.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/structure/debug.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/structure/qtips.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/structure/dd.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/structure/form.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/structure/resizable.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/structure/toolbar.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/structure/panel-reset.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/structure/slider.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/structure/combo.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/structure/layout.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/structure/dialog.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/structure/core.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/structure/button.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/structure/progress.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/structure/tabs.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/structure/box.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/structure/borders.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/structure/date-picker.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/structure/tree.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/structure/window.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/structure/list-view.css \
	$(PACKAGE)/static/lib/cgxp/ext/Ext/resources/css/xtheme-gray.css \
	$(PACKAGE)/static/lib/cgxp/openlayers/theme/default/style.css \
	$(PACKAGE)/static/lib/cgxp/geoext/resources/css/gxtheme-gray.css \
	$(PACKAGE)/static/lib/cgxp/geoext.ux/ux/Measure/resources/css/measure.css \
	$(PACKAGE)/static/lib/cgxp/gxp/src/theme/all.css \
	$(PACKAGE)/static/lib/cgxp/core/src/theme/all.css \
	$(PACKAGE)/static/css/proj-map.css \
	$(PACKAGE)/static/css/proj-widgets.css \
CSS_XAPI_OUTPUT = $(PACKAGE)/static/xapi.css

VALIDATE_PY_FOLDERS = $(PACKAGE)/*.py $(PACKAGE)/lib $(PACKAGE)/scripts $(PACKAGE)/views
VALIDATE_PY_TEST_FOLDERS = $(PACKAGE)/tests

# Sencha
SENCHA_CMD ?= sencha-cmd

# Documentation
SPHINX_FILES = $(shell find doc -name "*.rst" -print)

# Server localisation
SERVER_LOCALISATION_SOURCES_FILES += $(PACKAGE)/models.py $(shell find $(PACKAGE)/templates -type f -name '*.html')
SERVER_LOCALISATION_FILES = $(addprefix $(PACKAGE)/locale/, $(addsuffix /LC_MESSAGES/$(PACKAGE)-server.mo, $(LANGUAGES)))

# Print
PRINT_BASE_DIR ?= print
PRINT_WAR ?= print-$(PACKAGE)-$(INSTANCE_ID).war
PRINT_OUTPUT ?= /srv/tomcat/tomcat1/webapps/
ifeq ($(PRINT3), TRUE)
PRINT_BASE_WAR ?= print-servlet-3.1-SNAPSHOT.war
PRINT_INPUT += print-app
PRINT_REQUIREMENT += \
	$(PRINT_BASE_DIR)/WEB-INF/lib/jasperreports-functions-5.5.0.jar \
	$(PRINT_BASE_DIR)/WEB-INF/lib/joda-time-1.6.jar \
	$(PRINT_BASE_DIR)/WEB-INF/lib/jasperreports-fonts-5.5.0.jar \
	$(PRINT_BASE_DIR)/WEB-INF/lib/postgresql-9.3-1102.jdbc41.jar
PRINT_REQUIREMENT += $(shell find $(PRINT_BASE_DIR)/print-app 2> /dev/null)
endif
ifeq ($(PRINT2), TRUE)
PRINT_BASE_WAR ?= print-servlet-2.1-SNAPSHOT-IMG-MAGICK.war
PRINT_INPUT_LS ?= config.yaml WEB-INF/classes/log4j.properties
PRINT_INPUT_FIND ?= *.tif *.bmp *.jpg *.jpeg *.gif *.png *.pdf
PRINT_INPUT += $(shell cd $(PRINT_BASE_DIR) && ls -1 $(PRINT_INPUT_LS))
PRINT_INPUT += $(foreach INPUT, $(PRINT_INPUT_FIND), $(shell cd $(PRINT_BASE_DIR) && find -name '$(INPUT)' -type f))
PRINT_REQUIREMENT += $(addprefix, $(PRINT_BASE_DIR)/, $(PRINT_INPUT))
endif
PRINT_REQUIREMENT += $(PRINT_BASE_DIR)/$(PRINT_BASE_WAR)

# Templates
TEMPLATE_EXCLUDE += .build CONST_alembic/script.py.mako print/templates
FIND_OPTS = $(foreach ELEM, $(TEMPLATE_EXCLUDE),-path ./$(ELEM) -prune -o) -type f
TEMPLATE_FILES = $(shell find $(FIND_OPTS) -name "*.in" -print)
MAKO_FILES = $(shell find $(FIND_OPTS) -name "*.mako" -print)
JINJA_FILES = $(shell find $(FIND_OPTS) -name "*.jinja" -print)
VARS_FILES += CONST_vars.yaml $(VARS_FILE)
VARS_DEPENDS += VARS_FILES .build/node_modules.timestamp 
CONFIG_VARS += sqlalchemy.url auth_replication_enabled \
	sqlalchemy_replication.url schema parentschema enable_admin_interface pyramid_closure \
	node_modules_path closure_library_path default_locale_name servers \
	available_locale_names cache admin_interface functionalities external_themes_url \
	external_mapserv_url raster shortener mapserv_url hide_capabilities use_security_metadata \
	print_url tiles_url checker check_collector wfs default_max_age jsbuild package
ENVIRONMENT_VARS += INSTANCE_ID=${INSTANCE_ID} DEVELOPMENT=${DEVELOPMENT} PACKAGE=${PACKAGE}
C2C_TEMPLATE_CMD = $(ENVIRONMENT_VARS) .build/venv/bin/c2c-template --vars $(VARS_FILE)


.PHONY: help
help:
	@echo "Usage: make <target>"
	@echo
	@echo "Main targets:"
	@echo
	@echo "- build					Build and configure the project"
	@echo "- checks					Perform a number of checks on the code"
	@echo "- serve					Run the development server (pserve)"
	@echo "- clean					Remove generated files"
	@echo "- cleanall				Remove all the build artefacts"
	@echo
	@echo "Utility targets:"
	@echo
	@echo "- update					Update the project (GIT, node, pip)"
	@echo "- update-git-submodules	Update the GIT submodules"
	@echo "- update-node-modules	Update node modules (using --force)"
	@echo
	@echo "Secondary targets:"
	@echo
	@echo "- build-cgxp				Build the javascript and the css for cgxp"
	@echo "- build-ngeo				Build the javascript and the css for ngeo"
	@echo "- build-server			Build the files required by the server"
	@echo "- compile-js-catalog		Compile the angular translation catalog"
	@echo "- compile-py-catalog		Compile the angular translation catalog"
	@echo "- flake8					Run flake8 checker on the Python code"
	@echo "- lint-ngeo				Check the JavaScript code with linters for ngeo"
	@echo

.PHONY: build
build: $(BUILD_RULES)

.PHONY: checks
checks: flake8 $(CLIENT_CHECK_RULE) $(WEB_RULE)

.PHONY: clean
clean:
	rm -f .build/venv.timestamp
	rm -f .build/node_modules.timestamp
	rm -f .build/dev-requirements.timestamp
	rm -rf $(OUTPUT_DIR)/
	rm -f $(TEMPLATE_FILES:.in=)
	rm -f $(MAKO_FILES:.mako=)
	rm -f $(JINJA_FILES:.jinja=)

.PHONY: cleanall
cleanall: clean
	rm -rf .build
	rm -rf node_modules

.PHONY: flake8
flake8: .build/venv/bin/flake8
	.build/venv/bin/flake8 $(PACKAGE)

.PHONY: build-server
build-server: $(TEMPLATE_FILES:.in=) $(MAKO_FILES:.mako=) $(JINJA_FILES:.jinja=) compile-py-catalog .build/config.yaml $(SERVER_LOCALISATION_FILES)

.PHONY: lint-ngeo
lint-ngeo: .build/venv/bin/gjslint .build/node_modules.timestamp .build/gjslint.timestamp .build/jshint.timestamp

.PHONY: serve
serve: build development.ini
	.build/venv/bin/pserve --reload --monitor-restart development.ini

.PHONY: update-node-modules
update-node-modules:
	npm install --force
	touch .build/node_modules.timestamp

# Templates

%: %.in .build/venv/bin/c2c-template ${VARS_DEPENDS}
ifeq ($(origin VARS_FILE), undefined)
	@echo "Error: the variable VARS_FILE is required."
	exit 1
endif
	$(C2C_TEMPLATE_CMD) --engine template --files $@.in

%: %.mako .build/venv/bin/c2c-template ${VARS_DEPENDS}
ifeq ($(origin VARS_FILE), undefined)
	@echo "Error: the variable VARS_FILE is required."
	exit 1
endif
	$(C2C_TEMPLATE_CMD) --engine mako --files $@.mako

%: %.jinja .build/venv/bin/c2c-template ${VARS_DEPENDS}
ifeq ($(origin VARS_FILE), undefined)
	@echo "Error: the variable VARS_FILE is required."
	exit 1
endif
	$(C2C_TEMPLATE_CMD) --engine jinja --files $@.jinja

.build/venv/bin/c2c-template: .build/dev-requirements.timestamp

.build/config.yaml: .build/venv/bin/c2c-template ${VARS_DEPENDS}
	$(C2C_TEMPLATE_CMD) --get-config $@ $(CONFIG_VARS)

# server localisation

.build/venv/bin/pot-create: eggs

.PHONY: compile-py-catalog
compile-py-catalog: $(MO_SERVER_LOCALISATION_FILES)

$(PACKAGE)/locale/$(PACKAGE)-server.pot: $(SERVER_LOCALISATION_SOURCES_FILES) .build/venv/bin/pot-create lingua.cfg
	.build/venv/bin/pot-create -c lingua.cfg -o $@ $(SERVER_LOCALISATION_SOURCES_FILES)
	# removes the allways changed date line
	sed -i '/^"POT-Creation-Date: /d' $@
	sed -i '/^"PO-Revision-Date: /d' $@

$(PACKAGE)/locale/%/LC_MESSAGES/$(PACKAGE)-server.po: $(PACKAGE)/locale/$(PACKAGE)-server.pot .build/dev-requirements.timestamp
	touch $@
	msgmerge --update $@ $<

%.mo: %.po
	msgfmt -o $@ $<
	touch $@

# ngeo

.PHONY: build-ngeo
build-ngeo: \
	$(OUTPUT_DIR)/build.js \
	$(OUTPUT_DIR)/build.css \
	$(OUTPUT_DIR)/build.min.css \
	compile-js-catalog

.PHONY: compile-js-catalog
compile-js-catalog: $(JSON_CLIENT_LOCALISATION_FILES)

.build/venv/bin/db2pot: eggs

$(PACKAGE)/closure/%.py: $(CLOSURE_LIBRARY_PATH)/closure/bin/build/%.py
	cp $< $@

$(PACKAGE)/locale/$(PACKAGE)-js.pot: $(APP_HTML_FILES)
	node tasks/extract-messages.js $^ > $@

$(PACKAGE)/locale/$(PACKAGE)-db.pot: .build/venv/bin/db2pot
	mkdir -p $(dir $@)
	.build/venv/bin/db2pot
	msguniq $@ -o $@

$(PACKAGE)/locale/$(PACKAGE)-client.pot: $(PACKAGE)/locale/$(PACKAGE)-js.pot $(PACKAGE)/locale/$(PACKAGE)-db.pot
	msgcat $^ > $@

$(OUTPUT_DIR)/locale/%/$(PACKAGE).json: $(PACKAGE)/locale/%/LC_MESSAGES/$(PACKAGE)-client.po
	mkdir -p $(dir $@)
	node tasks/compile-catalog $< > $@

$(PACKAGE)/locale/%/LC_MESSAGES/%/$(PACKAGE)-client.po: $(PACKAGE)/locale/$(PACKAGE)-client.pot
	mkdir -p $(dir $@)
	touch $@
	msgmerge --update $@ $<

$(OUTPUT_DIR)/build.js: build.json $(OL_JS_FILES) $(NGEO_JS_FILES) $(APP_JS_FILES) .build/externs/angular-1.3.js .build/externs/angular-1.3-q.js .build/externs/angular-1.3-http-promise.js .build/externs/jquery-1.9.js .build/node_modules.timestamp
	mkdir -p $(dir $@)
	node tasks/build.js $< $@

$(OUTPUT_DIR)/build.min.css: $(LESS_FILES) .build/node_modules.timestamp
	mkdir -p $(dir $@)
	./node_modules/.bin/lessc --clean-css $(PACKAGE)/static/less/$(PACKAGE).less $@

$(OUTPUT_DIR)/build.css: $(LESS_FILES) .build/node_modules.timestamp
	mkdir -p $(dir $@)
	./node_modules/.bin/lessc $(PACKAGE)/static/less/$(PACKAGE).less $@

.build/externs/angular-1.3.js:
	mkdir -p $(dir $@)
	wget -O $@ https://raw.githubusercontent.com/google/closure-compiler/master/contrib/externs/angular-1.3.js
	touch $@

.build/externs/angular-1.3-q.js:
	mkdir -p $(dir $@)
	wget -O $@ https://raw.githubusercontent.com/google/closure-compiler/master/contrib/externs/angular-1.3-q.js
	touch $@

.build/externs/angular-1.3-http-promise.js:
	mkdir -p $(dir $@)
	wget -O $@ https://raw.githubusercontent.com/google/closure-compiler/master/contrib/externs/angular-1.3-http-promise.js
	touch $@

.build/externs/jquery-1.9.js:
	mkdir -p $(dir $@)
	wget -O $@ https://raw.githubusercontent.com/google/closure-compiler/master/contrib/externs/jquery-1.9.js
	touch $@

package.json:
ifeq ($(NGEO), TRUE)
	@echo Missing $@ required file by ngeo
	exit 1
else
	touch $@
endif

.build/node_modules.timestamp: package.json
	mkdir -p $(dir $@)
ifeq ($(NGEO), TRUE)
	npm install
endif
	touch $@

.build/gjslint.timestamp: $(APP_JS_FILES)
	mkdir -p $(dir $@)
	.build/venv/bin/gjslint --jslint_error=all --strict --custom_jsdoc_tags=event,fires,function,classdesc,api,observable $?
	touch $@

.build/jshint.timestamp: $(APP_JS_FILES)
	mkdir -p $(dir $@)
	./node_modules/.bin/jshint --verbose $?
	touch $@

# CGXP

.PHONY: build-cgxp
build-cgxp: $(JSBUILD_MAIN_OUTPUT_FILES) $(CSS_BASE_OUTPUT) $(CSS_API_OUTPUT) $(CSS_XAPI_OUTPUT)

.build/venv/bin/cssmin: .build/dev-requirements.timestamp

.PHONY: update-git
update-git:
	git pull --rebase
	git submodule sync
	git submodule update
	git submodule foreach git submodule sync
	git submodule foreach git submodule update --init
	# to install new package pypi version
	touch .build/venv.timestamp
ifeq ($(NGEO), TRUE)
	npm install --force
endif

.PHONY: update-git-submodules
update-git-submodules:
	git submodule sync
	git submodule update
	git submodule foreach git submodule sync
	git submodule foreach git submodule update --init

.git/modules/$(PACKAGE)/static/lib/cgxp/modules/%: .git/modules/$(PACKAGE)/static/lib/cgxp
	git submodule foreach git submodule update --init

.git/modules/$(PACKAGE)/static/lib/cgxp:
	git submodule update --init

$(JSBUILD_MAIN_OUTPUT_FILES): $(JSBUILD_MAIN_FILES) $(JSBUILD_MAIN_CONFIG) \
	.build/venv/bin/jsbuild \
	.git/modules/$(PACKAGE)/static/lib/cgxp/modules/openlayers \
	.git/modules/$(PACKAGE)/static/lib/cgxp
	mkdir -p $(dir $@)
	.build/venv/bin/jsbuild $(JSBUILD_MAIN_CONFIG) $(JSBUILD_ARGS) -j $(notdir $@) -o $(OUTPUT_DIR)

$(CSS_BASE_OUTPUT): .build/venv/bin/cssmin \
	.git/modules/$(PACKAGE)/static/lib/cgxp/modules/openlayers \
	.git/modules/$(PACKAGE)/static/lib/cgxp
ifeq ($(DEVELOPMENT), FALSE)
	ARGS = --compress
endif
	.build/venv/bin/c2c-cssmin $(ARGS) $@ $(CSS_BASE_FILES)

$(CSS_API_OUTPUT): .build/venv/bin/cssmin \
	.git/modules/$(PACKAGE)/static/lib/cgxp/modules/openlayers \
	.git/modules/$(PACKAGE)/static/lib/cgxp
ifeq ($(DEVELOPMENT), FALSE)
	ARGS = --compress
endif
	.build/venv/bin/c2c-cssmin $(ARGS) $@ $(CSS_API_FILES)

$(CSS_XAPI_OUTPUT): .build/venv/bin/cssmin \
	.git/modules/$(PACKAGE)/static/lib/cgxp/modules/openlayers \
	.git/modules/$(PACKAGE)/static/lib/cgxp
ifeq ($(DEVELOPMENT), FALSE)
	ARGS = --compress
endif
	.build/venv/bin/c2c-cssmin $(ARGS) $@ $(CSS_XAPI_FILES)

# Sencha touch

.PHONY: sencha-touch
sencha-touch: $(PACKAGE)/static/mobile/build/production/App/app.js

$(JSBUILD_MOBILE_OUTPUT_FILES): $(JSBUILD_MOBIL_FILES) $(JSBUILD_MOBILE_CONFIG) .build/venv/bin/jsbuild
	.build/venv/bin/jsbuild $(JSBUILD_MOBILE_CONFIG) $(JSBUILD_ARGS) -j $(notdir $@) -o $(JSBUILD_MOBILE_OUTPUT_DIR)

$(PACKAGE)/static/mobile/build/production/App/app.js: $(JSBUILD_MOBILE_OUTPUT_FILES)
	rm -rf $(PACKAGE)/static/mobile/build
	rm -rf $(PACKAGE)/static/mobile/archive
	cd $(PACKAGE)/static/mobile && $(SENCHA_CMD) app build production

# Check packages

.build/venv/bin/c2c-versions: .build/dev-requirements.timestamp

.PHONY: test-packages
test-packages: .build/test-packages.timestamp

.build/test-packages.timestamp: .build/venv/bin/c2c-versions CONST_packages.yaml
	.build/venv/bin/c2c-versions CONST_packages.yaml main
	touch $@

.PHONY: test-packages-mobile
test-packages-mobile: .build/test-packages-mobile.timestamp

.build/test-packages-mobile.timestamp: .build/venv/bin/c2c-versions CONST_packages.yaml
	.build/venv/bin/c2c-versions CONST_packages.yaml mobile
	touch $@

.PHONY: test-packages-tilecloud-chain
test-packages-tilecloud-chain: .build/test-packages-tilecloud-chain.timestamp

.build/test-packages-tilecloud-chain.timestamp: .build/venv/bin/c2c-versions CONST_packages.yaml
	.build/venv/bin/c2c-versions CONST_packages.yaml tilecloud-chain
	touch $@

.PHONY: test-packages-ngeo
test-packages-ngeo: .build/test-packages-ngeo.timestamp

.build/test-packages-ngeo.timestamp: .build/venv/bin/c2c-versions CONST_packages.yaml
	.build/venv/bin/c2c-versions CONST_packages.yaml ngeo
	touch $@

# Check

.build/venv/bin/gjslint: .build/dev-requirements.timestamp

.build/venv/bin/flake8: .build/dev-requirements.timestamp

# Venv

.build/dev-requirements.timestamp: .build/venv.timestamp
	.build/venv/bin/pip install $(DEV_REQUIREMENTS)
	touch $@

.build/venv.timestamp:
	mkdir -p $(dir $@)
	virtualenv --setuptools --no-site-packages .build/venv
	.build/venv/bin/pip install \
		--index-url http://pypi.camptocamp.net/pypi \
		'pip>=6' 'setuptools>=12'
	touch $@

.PHONY: eggs
eggs: .build/eggs.timestamp

.build/eggs.timestamp: .build/venv.timestamp setup.py CONST_versions.txt $(EXTRA_EGGS_DEPENDENTIES)
	.build/venv/bin/pip install $(REQUIREMENTS)
	touch -m $@

# Print

.PHONY: print
print: $(PRINT_OUTPUT)/$(PRINT_WAR)

$(PRINT_OUTPUT)/$(PRINT_WAR): $(PRINT_REQUIREMENT)
	cp $(PRINT_BASE_DIR)/$(PRINT_BASE_WAR) /tmp/$(PRINT_WAR)
	cd $(PRINT_BASE_DIR) && jar -uf /tmp/$(PRINT_WAR) $(PRINT_INPUT)
	mv /tmp/$(PRINT_WAR) $(PRINT_OUTPUT)

print/WEB-INF/lib/jasperreports-functions-5.5.0.jar:
	mkdir -p $(dir $@)
	wget http://sourceforge.net/projects/jasperreports/files/jasperreports/JasperReports%205.5.0/jasperreports-functions-5.5.0.jar/download -O $@

print/WEB-INF/lib/joda-time-1.6.jar:
	mkdir -p $(dir $@)
	wget http://mirrors.ibiblio.org/pub/mirrors/maven2/joda-time/joda-time/1.6/joda-time-1.6.jar -O $@

print/WEB-INF/lib/jasperreports-fonts-5.5.0.jar:
	mkdir -p $(dir $@)
	wget http://sourceforge.net/projects/jasperreports/files/jasperreports/JasperReports%205.5.0/jasperreports-fonts-5.5.0.jar/download -O $@

print/WEB-INF/lib/postgresql-9.3-1102.jdbc41.jar:
	mkdir -p $(dir $@)
	wget http://jdbc.postgresql.org/download/postgresql-9.3-1102.jdbc41.jar -O $@

# Other

.PHONY: fix-perm
fix-perm:
	find -type d -exec chmod --quiet g-s -- {}
	chmod --quiet -R g+rw,o+r .
