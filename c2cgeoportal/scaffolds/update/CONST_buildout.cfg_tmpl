[buildout]
parts = eggs
        activate
        template
        modwsgi
        jsbuild
        cssbuild
        cssbuild-api
        cssbuild-xapi
        po2mo
        print-template
        print-war
develop = .
index = http://pypi.camptocamp.net/pypi
allow-hosts = pypi.camptocamp.net
find-links = http://pypi.camptocamp.net/internal-pypi/index/c2cgeoportal
newest = false
prefer-final = true
extensions = buildout.dumppickedversions
    lovely.buildouthttp
versions = versions

# isolate ourself from the System Python
allowed-eggs-from-site-packages = osgeo.*
exec-sitecustomize = false

develop-eggs-directory = buildout/develop-eggs
eggs-directory = buildout/eggs
parts-directory = buildout/parts
bin-directory = buildout/bin

[versions]
# We currently rely on specific, patched versions of distribute 0.6.22 and
# zc.buildout 1.5.2 and don't want them to be upgraded.
distribute = 0.6.22
zc.buildout = 1.5.2

[vars]
# project instance id
instanceid = override_me
# the Unix user under which the modwsgi daemon processes are executed,
# can be overriden in development-specific buildout config files
modwsgi_user = www-data
# url-path where the instance must respond.
# default is '/${vars:instanceid}/wsgi/'.
apache-entry-point = /${vars:instanceid}/wsgi/
# cookie session secret
authtkt_secret = __import__('uuid').uuid4().hex
# database user
dbuser = www-data
# database password
dbpassword = www-data
# database host
dbhost = localhost
# database port
dbport = 5432
# database name
db = override_me
# sqlalchemy schema
schema = webapp
# database parent schema
parent_schema =
# mapserver apache allows for clients (ex: Allow from camptocamp.com)
mapserv_allow = Allow from localhost
# mapserver connexion string
mapserver_connection = user=${vars:dbuser} password=${vars:dbpassword} dbname=${vars:db} host=${vars:dbhost}
# mapserver join tables
mapserver_join_tables = ${vars:schema}.restrictionarea AS ra, ${vars:schema}.role_restrictionarea AS rra, ${vars:schema}.layer_restrictionarea AS lra, ${vars:schema}.treeitem AS la
# mapserver visible area
mapserver_join_area = ra.area
# mapserver join close
mapserver_join_where = rra.role_id = %role_id% AND rra.restrictionarea_id = ra.id AND lra.restrictionarea_id = ra.id AND lra.layer_id = la.id AND la.name =
# mapserver metadata for validation
mapserver_layer_metadata =
    "default_role_id" "-1"
    "role_id_validation_pattern" "^-?[0-9]*$"
# mapfile data subselect
mapfile_data_subselect = SELECT ST_Collect(ra.area) FROM main.restrictionarea AS ra, main.role_restrictionarea AS rra, main.layer_restrictionarea AS lra, main.treeitem AS la WHERE rra.role_id = %role_id% AND rra.restrictionarea_id = ra.id AND lra.restrictionarea_id = ra.id AND lra.layer_id = la.id AND la.name =
# mapserver filter on role id only
mapfile_data_noarea_subselect = SELECT rra.role_id FROM ${vars:mapserver_join_tables} WHERE rra.restrictionarea_id = ra.id AND lra.restrictionarea_id = ra.id AND lra.layer_id = la.id AND la.name =
# print path
print_path = /print-c2cgeoportal-${vars:instanceid}/pdf/
# port for the waitress web server
waitress_port = 5000

[eggs]
recipe = z3c.recipe.scripts
eggs = {{package}}
dependent-scripts = true
interpreter = python
initialization =
    import paste.script.command
    for egg in ['PasteScript', 'Pyramid', 'c2cgeoportal']: paste.script.command.system_plugins.append(egg)

[activate]
recipe = evg.recipe.activate

[cgxp-install]
recipe = collective.recipe.cmd
on_install = true
on_update = false
cmds =
    (cd ${buildout:directory}/{{package}}/static/lib && git clone https://github.com/camptocamp/cgxp.git && cd cgxp && git submodule update --init)

[print-template]
recipe = collective.recipe.cmd:py
on_install = true
on_update = true
cmds =
    >>> from subprocess import call
    >>> from os.path import join
    >>> cmd = join('buildout', 'bin', 'print_tpl')
    >>> print 'calling ' + cmd
    >>> call([cmd])
uninstall_cmds =
    >>> from os import path, remove
    >>> fpath = path.join('print', 'templates', 'print.mako')
    >>> if path.isfile(fpath):
    >>>    print 'removing ' + fpath
    >>>    remove(fpath)

[print-war]
recipe = c2c.recipe.jarfile
mode = update
basewar = print-servlet-1.2-SNAPSHOT.war
basedir = print/
input = ${print-war:basewar}
    WEB-INF/classes/log4j.properties
    WEB-INF/classes/spring-application-context.xml
    config.yaml
    *.tif
    *.bmp
    *.jpg
    *.jpeg
    *.gif
    *.png
output = /srv/tomcat/tomcat1/webapps/print-c2cgeoportal-${vars:instanceid}.war

[modwsgi]
recipe = collective.recipe.modwsgi
eggs = {{package}}
config-file = ${buildout:directory}/production.ini

[template]
recipe = z3c.recipe.filetemplate
source-directory = .
exclude-directories = buildout
interpreted-options = authtkt_secret
extends = vars

[jsbuild]
recipe = JSTools:buildjs
resource-dir = ${buildout:directory}/jsbuild
# the following jsbuild config files must be written on
# one line, otherwise Paste will throw a syntax error
config = ${jsbuild:resource-dir}/app.cfg
output-dir = {{package}}/static/build
compress = True

[jsbuild-mobile]
recipe = JSTools:buildjs
resource-dir = ${buildout:directory}/jsbuild
config = ${jsbuild:resource-dir}/mobile.cfg
output-dir = {{package}}/static/mobile
only = openlayers-mobile.js
compress = True

[mobile]
recipe = collective.recipe.cmd:py
on_install = true
on_update = true
compass_cmd = compass
sencha_cmd = sencha
cmds =
    >>> import os
    >>> from subprocess import Popen
    >>> src_dir = os.path.join(buildout.get('directory', '.'), '{{package}}', 'static', 'mobile')
    >>> Popen([buildout.get('mobile').get('compass_cmd'), 'compile', 'resources/sass'], cwd=src_dir).wait()
    >>> env = os.environ.copy()
    >>> env['_JAVA_OPTIONS'] = '-Xmx128m'
    >>> Popen([buildout.get('mobile').get('sencha_cmd'), 'app', 'build', 'production'], cwd=src_dir, env=env).wait()
    >>> from shutil import copy
    >>> dst_dir = os.path.join(src_dir, 'build', 'production')
    >>> src = os.path.join(src_dir, 'config.js')
    >>> copy(src, dst_dir)
    >>> src = os.path.join(src_dir, 'openlayers-mobile.js')
    >>> copy(src, dst_dir)

[cssbuild]
recipe = c2c.recipe.cssmin
input =
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/ext-all.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/xtheme-gray.css
    {{package}}/static/lib/cgxp/openlayers/theme/default/style.css
    {{package}}/static/lib/cgxp/geoext/resources/css/popup.css
    {{package}}/static/lib/cgxp/geoext/resources/css/gxtheme-gray.css
    {{package}}/static/lib/cgxp/geoext.ux/ux/Measure/resources/css/measure.css
    {{package}}/static/lib/cgxp/sandbox/FeatureEditing/resources/css/feature-editing.css
    {{package}}/static/lib/cgxp/styler/theme/css/styler.css
    {{package}}/static/lib/cgxp/gxp/src/theme/all.css
    {{package}}/static/lib/cgxp/core/src/theme/all.css
    {{package}}/static/lib/cgxp/ext.ux/ColorPicker/ressources/colorpicker.css
    {{package}}/static/lib/cgxp/ext/Ext/examples/ux/css/Spinner.css
    {{package}}/static/css/proj.css
    {{package}}/static/css/proj-map.css
    {{package}}/static/css/proj-widgets.css
output = {{package}}/static/build/app.css

[cssbuild-api]
recipe = c2c.recipe.cssmin
input =
    {{package}}/static/lib/cgxp/openlayers/theme/default/style.css
    {{package}}/static/css/proj-map.css
output = {{package}}/static/build/api.css

[cssbuild-xapi]
recipe = c2c.recipe.cssmin
input =
    {{package}}/static/lib/cgxp/core/src/theme/reset.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/visual/editor.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/visual/pivotgrid.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/visual/menu.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/visual/panel.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/visual/grid.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/visual/debug.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/visual/qtips.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/visual/dd.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/visual/form.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/visual/resizable.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/visual/toolbar.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/visual/slider.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/visual/combo.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/visual/layout.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/visual/dialog.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/visual/core.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/visual/button.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/visual/progress.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/visual/tabs.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/visual/box.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/visual/borders.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/visual/date-picker.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/visual/tree.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/visual/window.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/visual/list-view.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/structure/editor.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/structure/pivotgrid.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/structure/menu.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/structure/panel.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/structure/grid.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/structure/debug.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/structure/qtips.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/structure/dd.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/structure/form.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/structure/resizable.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/structure/toolbar.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/structure/panel-reset.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/structure/slider.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/structure/combo.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/structure/layout.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/structure/dialog.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/structure/core.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/structure/button.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/structure/progress.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/structure/tabs.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/structure/box.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/structure/borders.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/structure/date-picker.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/structure/tree.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/structure/window.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/structure/list-view.css
    {{package}}/static/lib/cgxp/ext/Ext/resources/css/xtheme-gray.css
    {{package}}/static/lib/cgxp/openlayers/theme/default/style.css
    {{package}}/static/lib/cgxp/geoext/resources/css/gxtheme-gray.css
    {{package}}/static/lib/cgxp/geoext.ux/ux/Measure/resources/css/measure.css
    {{package}}/static/lib/cgxp/gxp/src/theme/all.css
    {{package}}/static/lib/cgxp/core/src/theme/all.css
    {{package}}/static/css/proj-map.css
    {{package}}/static/css/proj-widgets.css
output = {{package}}/static/build/xapi.css

[po2mo]
recipe = c2c.recipe.msgfmt
po-directory = {{package}}/locale/
