[project]
name = "c2cgeoportal_admin"
version = "0.0.0"
description = "c2cgeoportal admin"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "BSD License"}
authors = [
    {name = "Camptocamp", email = "info@camptocamp.com"}
]
classifiers = [
    "Development Status :: 6 - Mature",
    "Environment :: Web Environment",
    "Framework :: Pyramid",
    "Intended Audience :: Other Audience",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: GIS",
    "Typing :: Typed"
]
keywords = ["web", "gis", "geoportail", "c2cgeoportal", "geocommune", "pyramid"]
urls = {Homepage = "https://github.com/camptocamp/c2cgeoportal/"}
dependencies = [
    "c2cgeoform",
    "c2cwsgiutils",
    "colander",
    "deform",
    "passwordgenerator",
    "pyproj",
    "pyramid",
    "pyramid_debugtoolbar",
    "pyramid_jinja2",
    "pyramid_tm",
    "sqlalchemy",
    "zope.event",
    "translationstring",
]

[project.optional-dependencies]
test = ["pytest", "pytest-cov"]

[project.entry-points."paste.app_factory"]
main = "c2cgeoportal_admin:main"

[project.entry-points."lingva.extractors"]
geomapfish-admin-config = "c2cgeoportal_admin.lib.lingva_extractor:GeomapfishConfigExtractor"

[tool.poetry]
packages = [{ include = "c2cgeoportal_admin" }]
include = ["c2cgeoportal_admin/py.typed"]

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
pattern = "^(?P<base>\\d+(\\.\\d+)*)"
format-jinja = """
{%- if env.get("VERSION_TYPE") == "default_branch" -%}
{{serialize_pep440(bump_version(base, 1), dev=distance)}}
{%- elif env.get("VERSION_TYPE") == "stabilization_branch" -%}
{{serialize_pep440(bump_version(base, 2), dev=distance)}}
{%- elif distance == 0 -%}
{{serialize_pep440(base)}}
{%- else -%}
{{serialize_pep440(bump_version(base), dev=distance)}}
{%- endif -%}
"""

[tool.poetry-plugin-tweak-dependencies-version]
default = "present"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning", "poetry-plugin-tweak-dependencies-version", "poetry-plugin-drop-python-upper-constraint"]
build-backend = "poetry.core.masonry.api"
