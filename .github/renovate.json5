{
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  'extends': [
    'github>camptocamp/gs-renovate-config-preset:base.json5#1.0.1',
    'github>camptocamp/gs-renovate-config-preset:group.json5#1.0.1',
    'github>camptocamp/gs-renovate-config-preset:stabilization-branches.json5#1.0.1',
    'github>camptocamp/gs-renovate-config-preset:ci.json5#1.0.1',
    'github>camptocamp/gs-renovate-config-preset:preset.json5#1.0.1',
    'github>camptocamp/gs-renovate-config-preset:pre-commit.json5#1.0.1',
    'github>camptocamp/gs-renovate-config-preset:docker.json5#1.0.1',
    'github>camptocamp/gs-renovate-config-preset:own.json5#1.0.1',
    'github>camptocamp/gs-renovate-config-preset:json-schema.json5#1.0.1',
    'github>camptocamp/gs-renovate-config-preset:shellcheck.json5#1.0.1',
  ],
  baseBranches: ['master', '2.6', '2.7', '2.8', '2.9'],
  customManagers: [
    {
      fileMatch: ['^ci/applications-versions.yaml$'],
      matchStrings: ['(?<depName>[^\\s]+): (?<currentValue>[^\\s]+) # (?<datasource>[^\\s]+)'],
      customType: 'regex',
    },
    /** Do update on the schema present in the projects ci/config.yaml */
    {
      fileMatch: ['^geoportal/c2cgeoportal_geoportal/scaffolds/*/{{cookiecutter.project}}/ci/config\\.yaml$'],
      matchStrings: [
        '.*https://raw\\.githubusercontent\\.com/(?<depName>[^\\s]+)/(?<currentValue>[0-9\\.]+)/.*',
      ],
      datasourceTemplate: 'github-tags',
      customType: 'regex',
    },
    /** Upgrade the postgres version in the env values */
    {
      fileMatch: [
        '^geoportal/c2cgeoportal_geoportal/scaffolds/create/{{cookiecutter.project}}/env\\.default$',
      ],
      matchStrings: ['POSTGRES_TAG=(?<currentValue>[0-9]+\\-postgis\\-[0-9]+)'],
      datasourceTemplate: 'docker',
      depNameTemplate: 'ghcr.io/camptocamp/postgres',
      customType: 'regex',
    },
  ],
  packageRules: [
    /** Docker images versioning */
    {
      matchDatasources: ['docker'],
      versioning: 'regex:^(?<major>\\d+)\\.(?<minor>\\d+)(-(?<compatibility>.*))?$',
      matchDepNames: [
        'ghcr.io/camptocamp/mapfish_print',
        'ghcr.io/camptocamp/tilecloud-chain',
        'ghcr.io/camptocamp/mapserver',
        'redis',
        'haproxy',
      ],
    },
    {
      matchDatasources: ['docker'],
      versioning: 'regex:^(?<compatibility>.*)-(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)?$',
      matchDepNames: ['ghcr.io/osgeo/gdal'],
    },
    /** Postgresql versioning */
    {
      matchDatasources: ['docker'],
      versioning: 'regex:^(?<major>\\d+)-(?<compatibility>.*)-(?<minor>\\d+)?$',
      matchDepNames: ['ghcr.io/camptocamp/postgres'],
    },
    /** Ungroup Gdal */
    {
      matchDepNames: ['ghcr.io/osgeo/gdal'],
      groupName: 'Gdal',
    },
    /** Ignore geoportal/requirements.txt */
    {
      matchPaths: ['geoportal/requirements.txt'],
      enabled: false,
    },
    /** Ignore .github/workflows/rebuild-*.yaml */
    {
      matchFileNames: ['.github/workflows/rebuild-*.yaml'],
      enabled: false,
    },
    /** Ignore .github/workflows/ngeo-*.yaml */
    {
      matchFileNames: ['.github/workflows/ngeo-*.yaml'],
      enabled: false,
    },
    /** Don't update the project minimal requirements */
    {
      matchPaths: ['ci/requirements-project\\.txt'],
      enabled: false,
    },
    /**
     * No upgrade for packages sphinxcontrib-*, they requires a new major version of Sphinx
     * For 2.6
     */
    {
      matchPackagePatterns: ['^sphinxcontrib-.*'],
      matchPaths: ['doc/Pipfile'],
      enabled: false,
    },
    /** Disable upgrading the supported Python version */
    {
      matchFileNames: [
        'pyproject.toml',
        'doc/pyproject.toml',
        'docker/config/pyproject.toml',
        'docker/qgisserver/pyproject.toml',
        '.python-version',
      ],
      enabled: false,
      matchDepNames: ['python'],
    },
    /** Don't upgrade c2cciutils in tools to be able to upbrade a version <= 2.8 */
    {
      matchPaths: ['pyproject.toml'],
      enabled: false,
      matchDepNames: ['c2cciutils'],
    },
    /** The version 5.4.1 of PyYAML is not working */
    {
      allowedVersions: '5.4.1',
      enabled: false,
      matchDepNames: ['PyYAML'],
    },
    /** Daily ngeo */
    {
      schedule: 'after 5am',
      groupName: 'Ngeo',
      matchDepNames: ['ngeo'],
    },
    /** No Alabaster update on 2.7 */
    {
      matchBaseBranches: ['2.7'],
      enabled: false,
      matchDepNames: ['alabaster'],
    },
    /** No types-pyyaml from 2.8 */
    {
      matchBaseBranches: ['2.8'],
      enabled: false,
      matchDepNames: ['types-pyyaml'],
    },
    /** No update alabaster on branch 2.6 */
    {
      matchBaseBranches: ['2.6'],
      enabled: false,
      matchDepNames: ['alabaster'],
    },
    /** Don't update the old workflow files */
    {
      matchFileNames: [
        '.github/workflows/*-2-6.yaml',
        '.github/workflows/*-2-7.yaml',
        '.github/workflows/*-2-8.yaml',
      ],
      enabled: false,
    },
    /** Don't update eslint to version >= 9.0.0 */
    {
      matchPackagePatterns: ['eslint'],
      allowedVersions: '<9.0.0',
      matchPaths: ['geoportal/package.json'],
    },
  ],
}
