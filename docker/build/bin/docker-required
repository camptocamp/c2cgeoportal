#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# Copyright (c) 2011-2019, Camptocamp SA
# All rights reserved.

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:

# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.

# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# The views and conclusions contained in the software and documentation are those
# of the authors and should not be interpreted as representing official policies,
# either expressed or implied, of the FreeBSD Project.


import argparse
import os

import re
import zgitignore


def main():
    parser = argparse.ArgumentParser(
        description="Get all the required files"
    )
    parser.add_argument(
        "--path", required=True,
        help="The docker path",
    )
    parser.add_argument(
        "--replace-pattern", nargs="*",
        default=["\\.mako$/", "\\.jinja$/"],
        help="The replace pattern for interpreted files, default: '\\.mako$/ \\.jinja$/'",
    )
    options = parser.parse_args()

    # Should depends on the Dockerfile
    print(os.path.join(options.path, "Dockerfile"))

    docker_ignore_path = os.path.join(options.path, ".dockerignore")
    if os.path.isfile(docker_ignore_path):
        # Should depends on the Docker ignore file
        print(docker_ignore_path)

        with open(docker_ignore_path) as f:
            ignores = zgitignore.ZgitIgnore(f.read().splitlines(), docker=True)
    else:
        ignores = zgitignore.ZgitIgnore([])

    replaces = []
    for replace_pattern in [p for p in options.replace_pattern if p != '']:
        pattern, replacement = replace_pattern.split("/")
        replaces.append((re.compile(pattern), replacement))

    path = os.path.realpath(options.path) + "/"
    for dir_path, _, file_names in os.walk(path):
        for filename in file_names:
            for pattern, replacement in replaces:
                filename = pattern.sub(replacement, filename)
            file_path = os.path.join(dir_path, filename)
            if \
                    ':' not in file_path and \
                    not ignores.is_ignored(file_path[len(path):], check_parents=True):
                print(file_path)


if __name__ == "__main__":
    main()
