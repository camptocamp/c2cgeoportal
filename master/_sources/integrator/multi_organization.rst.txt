. _integrator_multi_organization:

Multi organization
==================

The geoportal can host multiple organizations, with configuration differences for each organization.
In a multi-organization geoportal, each organization will have the same program code
(Python, Javascript, SCSS).

In this example we will have the came CSS but we can do some variations by using CSS var,
see `cssVars` in `gmfOptions` in the ngeo GMF constants definitions
`gmf constants <https://camptocamp.github.io/ngeo/master/jsdoc/module-contribs_gmf_src_options.html>`_.

The following lines will profide a basic implementation for multi-organization.

The code should be adapted, currently it handles the hostnames 'org1.camptocamp.com' and
'org2.camptocamp.com', and you probably want to put the hardcoded values in the config.

`__init__.py`
-------------

In the file `geoportal/<package>_geoportal/__init__.py` add the following lines:

.. code:: python

    def get_instance_prefix(request):
        if request.host == "org1.camptocamp.com":
            return "org1"
        if request.host == "org2.camptocamp.com":
            return "org2"
        # Can be used to debug the application
        return os.environ.get("DEFAULT_PREFIX", "unknown")


    def get_organization_role(request, role_type):
        prefix = get_instance_prefix(request)
        return f"{prefix}-{role_type}"


    def get_organization_interface(request, interface):
        prefix = get_instance_prefix(request)
        return f"{prefix}-{interface}"


    def get_organization_print_url(request):
        prefix = get_instance_prefix(request)
        print_url = request.registry.settings["print_url"]
        # Custom code can be added to have a different behavior
        return print_url


    # In `main` function, after `config.include("c2cgeoportal_geoportal")`
        config.add_request_method(get_organization_role, name="get_organization_role")
        config.add_request_method(get_organization_interface, name="get_organization_interface")
        config.add_request_method(get_organization_print_url, name="get_organization_print_url")

`vars.yaml`
-----------

In the file `geoportal/vars.yaml` add the following in interfaces the `interfaces_config`:

.. code:: yaml

    org1-desktop:
        extends: desktop
        redirect_interface: mobile
        constants:
            ...
    org1-mobile:
        extends: mobile
        redirect_interface: desktop
        constants:
            ...
    org2-desktop:
        extends: desktop
        redirect_interface: mobile
        constants:
            ...
    org2-mobile:
        extends: mobile
        redirect_interface: desktop
        constants:
            ...

Roles
-----

The following roles should be created and completed as needed
(the original roles 'anonymous', 'registered' and 'intranet' are no more used)::

- org1-anonymous
- org1-registered
- org1-intranet
- org2-anonymous
- org2-registered
- org2-intranet

Warning
-------

With that, one user of the org1 can login to the organization org2 and will have the 'registered' rights.
