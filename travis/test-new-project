#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# Copyright (c) 2011-2017, Camptocamp SA
# All rights reserved.

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:

# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.

# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# The views and conclusions contained in the software and documentation are those
# of the authors and should not be interpreted as representing official policies,
# either expressed or implied, of the FreeBSD Project.

import json
import urllib.error
import urllib.request
import sys

initial_error_length = 0
initial_access_length = 0

url = sys.argv[1]

try:
    # See also:
    # travis/vars.yaml geoportal/GUNICORN_PARAMS
    # Jenkinsfile timeout line 130
    result = urllib.request.urlopen(url, timeout=240)

    if len(sys.argv) == 3 and sys.argv[2] == "enum":
        result = urllib.request.urlopen(url, timeout=30)
        data = result.read().decode('utf-8')
        if result.status == 200 and json.loads(data) == {
            "items": [{
                "label": "car",
                "value": "car"
            }, {
                "label": "train",
                "value": "train"
            }]
        }:
            print("enum OK")
            exit()
        else:
            print("Incorrect result ({}):".format(result.status))
            print(data)
            exit(2)
    print("OK")
except urllib.error.HTTPError as e:
    print("Bad status code {}".format(e.code))

    print("RESULT:")
    print(e.fp.read().decode('utf-8'))
    exit(2)
