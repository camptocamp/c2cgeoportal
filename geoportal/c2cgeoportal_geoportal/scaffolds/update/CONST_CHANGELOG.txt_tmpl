This file includes migration steps for each release of c2cgeoportal.


=============
Version 2.6.0
=============

Information to know before starting the upgrade
===============================================

Direct dependencies updates
---------------------------

Now we are based on the image `osgeo/gdal` (`ubuntu-small-3.2.1`) which is based on Ubuntu 20.04.
Previously we were based on image `camptocamp/c2cwsgiutils` (`release_3`) which is based on Ubuntu 18.04

Main version update
-------------------
Ubuntu is updated from 18.04.5 to 20.04.1
Python is updated from 3.7.5 to 3.8.5
Node is updated from 10.24.1 to 14.17.0
Npm is updated from 6.14.12 to 6.14.13
Postgres is updated from 13+226.pgdg18.04+1 to 13+226.pgdg20.04+1

Python package update
---------------------
New packages:
* c2cwsgiutils at version 4.1.1
* GDAL at version 3.2.1
* linesman at version 0.3.2
* networkx at version 1.7
* oauthlib at version 3.1.0
* Paste at version 3.5.0
* pbr at version 5.5.1
* Pillow at version 8.1.2
* pipfile at version 0.0.2
* pkgconfig at version 1.5.1
* pygraphviz at version 1.7
* pyyaml-include at version 1.2.post2
* stevedore at version 3.3.0
* toml at version 0.10.2

Removed packages:
* importlib-metadata
* simplejson
* typing-extensions
* zipp

Major updates:
* attrs from 19.3.0 to 20.3.0
* chardet from 3.0.4 to 4.0.0
* cornice from 4.0.1 to 5.0.3
* dogpile.cache from 0.9.0 to 1.0.2
* Jinja2 from 3.0.0a1 to 2.11.3
* MarkupSafe from 2.0.0a1 to 1.1.1
* pyparsing from 3.0.0a1 to 2.4.7
* pyproj from 2.6.0 to 3.0.0.post1
* pytz from 2019.3 to 2021.1
* sentry-sdk from 0.14.3 to 1.0.0
* ujson from 2.0.3 to 4.0.2

Minor updates:
* alembic from 1.4.2 to 1.5.3
* Babel from 2.8.0 to 2.9.0
* boltons from 20.1.0 to 20.2.1
* c2c.template from 2.1.0 to 2.3.0
* cee-syslog-handler from 0.5.0 to 0.6.0
* certifi from 2020.4.5.1 to 2020.12.5
* cligj from 0.5.0 to 0.7.1
* colander from 1.7.0 to 1.8.3
* GeoAlchemy2 from 0.7.0 to 0.8.4
* idna from 2.9 to 2.10
* numpy from 1.18.3 to 1.20.0
* objgraph from 3.4.1 to 3.5.0
* OWSLib from 0.19.2 to 0.22.0
* pipenv from 2020.5.28 to 2020.11.15
* Pygments from 2.6.1 to 2.7.4
* pyotp from 2.3.0 to 2.5.1
* pyramid-debugtoolbar from 4.6.1 to 4.9
* PyYAML from 5.3.1 to 5.4.1
* rasterio from 1.1.3 to 1.2.0
* redis from 3.4.1 to 3.5.3
* requests from 2.23.0 to 2.25.1
* six from 1.14.0 to 1.15.0
* translationstring from 1.3 to 1.4
* urllib3 from 1.25.9 to 1.26.4
* zope.interface from 5.1.0 to 5.2.0

Npm package update
------------------
New packages:
* @sentry/tracing at version 6.2.3
* babel-plugin-angularjs-annotate at version 0.10.0
* eslint at version 7.19.0
* event-hooks-webpack-plugin at version 2.2.0
* mapillary-js at version 2.21.0
* tinycolor2 at version 1.4.2

Removed packages:
* @camptocamp/babel-plugin-angularjs-annotate
* jsdoc
* jsdoc-plugin-typescript
* tsconfig-paths
* typescript

Major updates:
* @sentry/browser from 5.15.4 to 6.2.3
* commander from 5.0.0 to 7.0.0
* copy-webpack-plugin from 5.1.1 to 6.4.1
* css-loader from 3.5.2 to 5.0.1
* expose-loader from 0.7.5 to 1.0.3
* html-webpack-plugin from 3.2.0 to 4.5.1
* node-sass-importer from 1.0.0 to 2.0.2
* puppeteer from 2.1.1 to 5.5.0
* ts-node from 8.8.2 to 9.1.1
* webpack-merge from 4.2.2 to 5.7.3

Minor updates:
* @babel/core from 7.9.0 to 7.12.10
* @babel/preset-env from 7.9.5 to 7.12.11
* @fortawesome/fontawesome-free from 5.13.0 to 5.15.2
* @trevoreyre/autocomplete-js from 2.1.1 to 2.2.0
* angular-animate from 1.7.9 to 1.8.2
* angular-mocks from 1.7.9 to 1.8.2
* angular-sanitize from 1.7.9 to 1.8.2
* angular-touch from 1.7.9 to 1.8.2
* babel-loader from 8.1.0 to 8.2.2
* bootstrap from 4.4.1 to 4.6.0
* d3 from 5.15.1 to 5.16.0
* ejs-loader from 0.3.6 to 0.5.0
* extract-loader from 5.0.1 to 5.1.0
* file-loader from 6.0.0 to 6.2.0
* floatthead from 2.1.4 to 2.2.1
* fs-extra from 9.0.0 to 9.1.0
* jsts from 2.1.2 to 2.6.1
* localforage from 1.7.3 to 1.9.0
* moment from 2.24.0 to 2.29.1
* node-sass from 4.13.1 to 4.14.1
* ol-layerswitcher from 3.6.0 to 3.8.3
* proj4 from 2.6.1 to 2.7.0
* sinon from 9.0.2 to 9.2.4
* terser-webpack-plugin from 4.1.0 to 4.2.3
* webpack from 4.42.1 to 4.46.0

Other Docker images
~~~~~~~~~~~~~~~~~~~

* `camptocamp/mapfish_print` from 3.22 to 3.27.
* `camptocamp/mapserver` from 7.4 to 7.6.
* `camptocamp/geomapfish-qgisserver` from 3.10 to 3.16.
* `camptocamp/redis` from 5 to 6.
* `camptocamp/tilecloud-chain` from 1.13 to 1.15.
* `camptocamp/haproxy` from 1.9 to 2.2.

Client application configuration
--------------------------------

Previous versions had configuration in the `*.html.ejs`, in the `Controler*.js`, and in the `vars.yaml` file.
The goal of this change is to group all this configuration to the `vars.yaml` file (with default values in
the `CONST_vars.yaml`). This will make future upgrades easier and increase configuration possibilities
in the simple application mode, see the documentation
<https://camptocamp.github.io/c2cgeoportal/${MAIN_BRANCH}/integrator/create_application.html#simple-application>.

When you apply the `ngeo.diff` you should first apply the proposed changes concerning the
`geoportal/vars.yaml` file itself.

Then during applying the `ngeo.diff` you have to remove multiple lines of configuration from your
`*.html.ejs` and `Controler*.js` files. for each configuration that diverge from the default configuration you
have to override the default value (that are newly defined in the `geoportal/CONST_vars.yaml`) by adding
a new value in the `vars/interface_config` section of your `geoportal/vars.yaml` file.

In the `vars/interface_config` section of the `geoportal/vars.yaml` and the `geoporal/CONST_vars.yaml` files,
you define configuration per `interface`, and then mainly per `constants` and `routes` (for paths). See all
possibility in the `Dynamic.json view` part of the documentation
<https://camptocamp.github.io/c2cgeoportal/${MAIN_BRANCH}/integrator/ngeo.html?highlight=ngeo#dynamic-json-view>

You can find a list of existing options in the `geoporal/CONST_vars.yaml` and here with descriptions:
- GMF constants definitions <https://camptocamp.github.io/ngeo/master/jsdoc/module-contribs_gmf_src_options.html>
- ngeo constants definitions <https://camptocamp.github.io/ngeo/master/jsdoc/module-src_options.html>

In the following examples, we show typical examples of necessary changes:

Standard example in controller
..............................

In the ngeo.diff:
```
-    this.elevationLayers = ['aster', 'srtm'];
```

But you have this custom config in your `geoportal/{{package}}_geoportal/static-ngeo/api/index.js` file:
```
   this.elevationLayers = ['mns', 'mnt', 'rayglobal'];
```

We have to remove the `elevationLayers` config. And we also see that the project settings do not correspond to
the default settings, therefore you should have in your `geoportal/vars.yaml` file something like:
```
vars:
  interfaces_config:
    default:  # or interface name
      constants:
        gmfElevationOptions:
          layers: [mns, mnt, rayglobal]
```

Again, you can find the `gmfElevationOptions` in the `geoporal/CONST_vars.yaml` and its composition and
description in the GMF/ngeo constants definitions (see links above).

Example in API
..............

In the ngeo.diff:
```
--- a/geoportal/{{package}}_geoportal/static-ngeo/api/index.js
+++ b/geoportal/{{package}}_geoportal/static-ngeo/api/index.js
...
-// The URL to the search service.
-config.searchUrl = '{FULL_ENTRY_POINT}search?interface=api&limit=15';
```

And in your `geoportal/{{package}}_geoportal/static-ngeo/api/index.js` file:
```
// The URL to the search service.
config.searchUrl = '{FULL_ENTRY_POINT}search?interface=api&limit=15';
```

We see that the project settings didn't correspond to the previous default settings, therefore you should
have in your vars file something like:
```
vars:
  interfaces_config:
    api:
      routes:
        searchUrl:
          params:
            limit: 15

update_paths:
  - interfaces_config.api.routes.searchUrl  # This one should already be present
```

In this case you could have to add also this `update_paths`. It's because the default value in the
`geoportal/CONST_vars.yaml` define the searchUrl like this:

```
searchUrl:
  name: fulltextsearch
  params:
    limit: 15
    partitionlimit: 5
  dynamic_params:
    interface: interface
```

You won't redefine the whole `searchUrl` configuration you only want to set the params. The `update_paths`
Allows you to update the one part of the configuration. Without this entry in the `update_paths`, the
whole `searchUrl` configuration would have been replaced.

Example in controller constructor
.................................

In the ngeo.diff:
```
-  constructor($scope, $injector) {
-    super({
-      srid: 2056,
-      mapViewConfig: {
-        center: [2632464, 1185457],
-        zoom: 3,
-        resolutions: [250, 100, 50, 20, 10, 5, 2, 1, 0.5, 0.25, 0.1, 0.05],
-        constrainResolution: true,
-        extent: [2485071.54, 175346.36, 2828515.78, 1299941.84],
-      }
-    }, $scope, $injector);
```

And in your `geoportal/{{package}}_geoportal/static-ngeo/api/index.js` file:
```
  constructor($scope, $injector) {
    super({
      maxTilesLoading: Infinity,
      srid: 2056,
      mapViewConfig: {
        center: [2559045, 1144195],
        zoom: 1,
        constrainResolution: true,
        resolutions: [50, 20, 10, 5, 2.5, 2, 1.5, 1, 0.5, 0.25, 0.1, 0.05, 0.025]
      }
    }, $scope, $injector);
```

We see that the project settings didn't correspond to the previous default settings, therefore you should
have in your vars file something like:
```
vars:
  interfaces_config:
    default:  # or interface name
      constants:
        gmfOptions:
          map:
            maxTilesLoading: .Inf
          view: &view
            projection: EPSG:{srid}
            center: [2559045, 1144195]
            zoom: 1
            resolutions: &resolutions [50, 20, 10, 5, 2.5, 2, 1.5, 1, 0.5, 0.25, 0.1, 0.05, 0.025]
            extent: &extent [2420000, 1030000, 2900000, 1350000]
          geolocalisation: True
```

Other configuration
...................

You also have to configure the `vars/srid`, `vars/alternate_projections`, `vars/resolutions` and
`vars/extent` they will be dispatched using `c2ctemplate` or YAML link.

Now we can easily switch between the display of query results in a window or in a grid by using
`gmfQueryGrid` configuration variable.

Now you can easily switch between flush theme mode and non-flush theme mode  by using
`gmfTreeManagerModeFlush` configuration variable.

Optional point
..............

The header can be in a separate file, diff in the `*.html.ejs` file:

    - <header>
    -   <div class="logo">
    -     <span></span>
    -   </div>
    -   <div class="logo-right">
    -     <span></span>
    -   </div>
    - </header>
    + <ng-include src="'desktop_alt/header.html'"></ng-include>

The content will be in the `geoportal/{{package}}_geoportal/static/header.html` file.

Print
-----

- You can now switch easily between local print and mutualised print by setting one
  of `DISABLE_MUTUALIZED_PRINT` and `DISABLE_LOCAL_PRINT` environment variavle to '#' ant the other to ''.
- The client timezone is added as a new attribute named `timezone`, you can use it with e.-g.:
  `java.time.ZonedDateTime.now().format(java.time.format.DateTimeFormatter
    .ofPattern("EEEE dd MMMM yyyy HH:mm")
    .withLocale($P{REPORT_LOCALE})
    .withZone(java.time.ZoneId.of($P{timezone}))`
- If you use the most recent version of the `legend.jrxml` print template, you will obtain a legend with
  elements indented hierarchically per groups level. If you want to keep the previous legend style, keep
  your previous `legend.jrxml` template and add a new variable `gmfPrintOptions.legend.showGroupsTitle` in
  the `interfaces_config` constants of the vars file and set it to false.

Editing
-------

- The default order column for edition enumeration lists is now the value column ("name" per
  default). You can set it through the new `editingEnumerations` layer metadata.

QGIS server
-----------

- The runtime variables of the GeoMapFish configuration (geomapfish.yaml.tmpl) are now filled in the config
  container, previously it was in the QGIS server container.

Tile generation
---------------

- Some commands are added to generate the OpenLayers example,
  and the legend images used in the WMTS capabilities (but not used in the web application).

Redis
-----

- Redis can be used in a scalable architecture (with sentinel), this is disabled by default.


Changes to apply
================

1. All ngeo components are now configured via variables in your project variables file, in the section
   interfaces_config. To ease future migration, you should remove any existing custom JavaScript code which is
   setting such variables.
   There is some new documentation about the constants in ngeo
   https://camptocamp.github.io/ngeo/{{geomapfish_main_version}}/apidoc/index.html.


=============
Version 2.5.0
=============

Information
-----------

1. Basic authentication is disabled by default from this version onward.
   To enable basic auth see:
   https://camptocamp.github.io/c2cgeoportal/{{geomapfish_main_version}}/integrator/security.html#basic-auth

2. We change the secret name from `GITHUB_GOPASS_CI_TOKEN` to `GOPASS_CI_GITHUB_TOKEN` because we can't
   anymore create create secret started with `GITHUB_`.

3. Layers which have any errors are not added to the theme anymore.

4. If a WMS version is given in an OGC server URL, it will be used for the GetCapabilities request
   Supported versions: 1.1.1 and 1.3.0

Changes to apply
----------------

1. Now we need to have PyYAML python package installed in the home,
   see the documentation for more information:
   https://camptocamp.github.io/c2cgeoportal/{{geomapfish_main_version}}/integrator/requirements.html

2. The configuration vars `vars/functionalities/anonymous` and `vars/functionalities/registered` should
   be moved to the new roles `anonymous` and `registered` that will be created once the database has been upgraded.

3. The 'INSTANCE' configuration variable is removed, it should be in the '.env' files, and also the
   environment makefiles, these contents should also be moved to the '.env' files. In a multi-organization
   project you can have a chain of multiple '.env' files see the build configuration documentation.

4. A new PostgreSQL extension is required, install it by running in psql:
   `CREATE EXTENSION IF NOT EXISTS hstore;`

5. The static files will be moved, therefore you should replace:
   `request.static_url('{{package}}_geoportal:static/` by:
   `request.static_url('/etc/geomapfish/static/`.

6. Optional, change your mapfiles according the documentation:
   https://camptocamp.github.io/c2cgeoportal/{{geomapfish_main_version}}/administrator/mapfile.html


Version 2.4.2
=============

Information
-----------

1. The SVG inclusion through Webpack has changed, See ngeo SVG example for more information:
   https://camptocamp.github.io/ngeo/master/examples/svg.html

2. The WMTS capabilities is now generated on runtime.

3. If not already done the 'edit' and 'routing' interfaces and their relations will be removed from the
   database, If you don't want that, you should rename the interfaces before applying the alembic scripts.

4. If not already done the 'api' and 'iframe_api' will be created. After the database upgrade you can run
   the following request to fill e.-g. the api's interfaces with the desktop interface:

    INSERT INTO main.interface_layer (interface_id, layer_id)
    SELECT <api_interface_id>, layer_id FROM main.interface_layer WHERE interface_id = <other_interface_id>;
    INSERT INTO main.interface_theme (interface_id, theme_id)
    SELECT <api_interface_id>, theme_id FROM main.interface_theme WHERE interface_id = <other_interface_id>;
