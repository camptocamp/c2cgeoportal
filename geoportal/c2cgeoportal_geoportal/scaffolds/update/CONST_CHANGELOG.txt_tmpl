This file includes migration steps for each release of c2cgeoportal.


Version 2.5.0
=============

Information
-----------

1. Basic authentication is disabled by default from this version onward.
   To enable basic auth see:
   https://camptocamp.github.io/c2cgeoportal/{{geomapfish_main_version}}/integrator/security.html#basic-auth

Changes to apply
----------------

1. Now we need to have PyYAML python package installed in the home,
   see the documentation for more information:
   https://camptocamp.github.io/c2cgeoportal/{{geomapfish_main_version}}/integrator/requirements.html

2. The configuration vars `vars/functionalities/anonymous` and `vars/functionalities/registered` should
   be moved to the new roles `anonymous` and `registered` that will be created once the database has been upgraded.

3. The 'INSTANCE' configuration variable is removed, it should be in the '.env' files, and also the
   environment makefiles, these contents should also be moved to the '.env' files. In a multi-organisation
   project you can have a chain of multiple '.env' files see the build configuration documentation.

4. A new PostgreSQL extension is required, install it by running in psql:
   `CREATE EXTENSION IF NOT EXISTS hstore;`

5. The static files will be moved, therefore you should replace:
   `request.static_url('{{package}}_geoportal:static/` by:
   `request.static_url('/etc/geomapfish/static/`.

6. Optional, change your mapfiles according the documentation:
   https://camptocamp.github.io/c2cgeoportal/{{geomapfish_main_version}}/administrator/mapfile.html


Version 2.4.2
=============

Information
-----------

1. The SVG inclusion through Webpack has changed, See ngeo SVG example for more information:
   https://camptocamp.github.io/ngeo/master/examples/svg.html

2. The WMTS capabilities is now generated on runtime.

3. If not already done the 'edit' and 'routing' interfaces and their relations will be removed from the
   database, If you don't want that, you should rename the interfaces before applying the alembic scripts.

4. If not already done the 'api' and 'iframe_api' will be created. After the database upgrade you can run
   the following request to fill e.-g. the api's interfaces with the desktop interface:

    INSERT INTO main.interface_layer (interface_id, layer_id)
    SELECT <api_interface_id>, layer_id FROM main.interface_layer WHERE interface_id = <other_interface_id>;
    INSERT INTO main.interface_theme (interface_id, theme_id)
    SELECT <api_interface_id>, theme_id FROM main.interface_theme WHERE interface_id = <other_interface_id>;
