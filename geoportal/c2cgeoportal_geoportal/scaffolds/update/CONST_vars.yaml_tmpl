---

vars:
  # is in developement mode
  development: '{DEVELOPMENT}'
  # the package name
  package: {{package}}
  geomapfish_version: '{GEOMAPFISH_VERSION}'
  instance: main
  build_volume_name: '{BUILD_VOLUME_NAME}'

  srid: -1

  host: '{VISIBLE_WEB_HOST}'
  web_protocol: '{VISIBLE_WEB_PROTOCOL}'
  entry_point: '{VISIBLE_ENTRY_POINT}'

  # Docker base image name (comes from the makefile).
  docker_base: '{DOCKER_BASE}'
  docker_tag: '{DOCKER_TAG}'
  # database user
  dbuser: '{PGUSER}'
  # database password
  dbpassword: '{PGPASSWORD}'
  # master database host
  dbhost: '{PGHOST}'
  # slave database host
  dbhost_slave: '{PGHOST_SLAVE}'
  # database port
  dbport: '{PGPORT}'
  # database name
  db: '{PGDATABASE}'
  # sqlalchemy schema
  schema: '{PGSCHEMA}'
  # sqlalchemy static schema
  schema_static: '{PGSCHEMA_STATIC}'

  dbsessions: {}

  # mapserver connexion string
  mapserver_connection: user={dbuser} password={dbpassword} dbname={db} host={dbhost}
  # mapserver join tables
  mapserver_join_tables: "{schema}.restrictionarea AS ra, {schema}.role_restrictionarea AS rra, \
    {schema}.layer_restrictionarea AS lra, {schema}.treeitem AS la"
  # mapserver visible area
  mapserver_join_area: ra.area
  # mapserver join close
  mapserver_join_where: "rra.role_id = %role_id% AND rra.restrictionarea_id = ra.id AND \
    lra.restrictionarea_id = ra.id AND lra.layer_id = la.id AND la.name = "
  # mapserver metadata for validation
  mapserver_layer_metadata: ""
  mapserver_layer_validation: |
    "default_role_id" "-1"
    "role_id" "^-?[0-9]*$"
  # mapfile data subselect
  mapfile_data_subselect: "SELECT ST_Collect(ra.area) FROM main.restrictionarea AS ra, \
    main.role_restrictionarea AS rra, main.layer_restrictionarea AS lra, main.treeitem AS la \
    WHERE rra.role_id = %role_id% AND rra.restrictionarea_id = ra.id AND lra.restrictionarea_id = ra.id \
    AND lra.layer_id = la.id AND la.name = "
  # mapserver filter on role id only
  mapfile_data_noarea_subselect: "SELECT rra.role_id FROM {mapserver_join_tables} \
    WHERE rra.restrictionarea_id = ra.id AND lra.restrictionarea_id = ra.id \
    AND lra.layer_id = la.id AND la.name = "
  enable_admin_interface: True

  directory: __import__('os').getcwd()
  project_directory: '{PROJECT_DIRECTORY}'
  python_path: '{PYTHON_PATH}'
  ps: __import__('os').path.sep

  # Authentication settings
  authtkt:
    # Cookie session secret
    secret: __import__('uuid').uuid4().hex
    cookie_name: auth_tkt_{instance}
  # Database informations
  sqlalchemy:
    url: postgresql://{dbuser}:{dbpassword}@{dbhost}:{dbport}/{db}
  sqlalchemy_slave:
    url: postgresql://{dbuser}:{dbpassword}@{dbhost_slave}:{dbport}/{db}

  # 10 days of default cache
  default_max_age: 864000

  # For debug mode
  jsbuild:
    config: "{directory}/jsbuild/app.cfg"
    root_dir: "{directory}"

  # used for the "node_modules" and "closure" static views
  closure_library_path: 'process.stdout.write(require("@camptocamp/closure-util").getLibraryPath())'
  node_modules_path: "/usr/lib/node_modules"

  # pyramid_closure configuration
  # Each item in the roots_with_prefix array is an array with two elements. The
  # first element is the path pyramid_closure passed to request.static_url. The
  # second element is the file system path where js source files are searched.
  # For this to work window.CLOSURE_BASE_PATH being set to the empty string in
  # the HTMLÂ page.
  pyramid_closure:
    roots_with_prefix:
      - ["{closure_library_path}/closure/goog", "{closure_library_path}/closure/goog"]
      - ["{package}_geoportal:static-ngeo/js", "{directory}/{package}/static-ngeo/js"]
      - ["{package}_geoportal:static-ngeo/components", "{directory}/{package}/static-ngeo/components"]
      - ["{node_modules_path}{ps}openlayers/src", "{node_modules_path}{ps}openlayers/src"]
      - ["{node_modules_path}{ps}openlayers/build", "{node_modules_path}{ps}openlayers/build"]
      - ["{node_modules_path}{ps}ngeo/src", "{node_modules_path}{ps}ngeo/src"]
      - ["{node_modules_path}{ps}ngeo/contribs/gmf/src", "{node_modules_path}{ps}ngeo/contribs/gmf/src"]

  # The application's default language. This is the language used by
  # the application if no specific language is specified in the URLs.
  # This also defines the language used for the text search.
  default_locale_name: fr

  # The set of languages supported by the applications.
  available_locale_names:
    - en
    - fr
    - de

  # All the application interfaces used to create the apache rewrite rules
  interfaces: __import__('os').environ.get("INTERFACES").split(" ")

  default_interface: desktop

  # The dogpile.cache configuration.
  #
  # Do not touch if unsure.
  #
  # The cache section below takes three properties:
  #
  # - backend: the name of the cache backend (ex: dogpile.cache.memory,
  #   dogpile.cache.memcached, etc.). Mandatory.
  # - expiration_time: the cache expiration time. Optional (infinite if not
  #   specified).
  # - arguments: backend-specific arguments. Optional.
  #
  # Here is a dogpile.cache configuration example for the memcached backend
  # (equivalent of
  # http://dogpilecache.readthedocs.org/en/latest/api.html#dogpile.cache.backends.memcached.MemcachedBackend)
  # cache:
  #   backend: dogpile.cache.memcached
  #   expiration_time: 3600
  #   arguments:
  #   url: 127.0.0.1:11211
  cache:
    backend: dogpile.cache.memory

  admin_interface:
    # Default values for the admin interface's maps.
    map_x: 740000
    map_y: 5860000
    map_zoom: 10

    # The list of available variable names for the `Metadatas` form.
    available_metadata:
      # Layers group
      - name: isExpanded
        type: boolean
      # Layer
      - name: copyTo  # V1
      - name: copyable
        type: boolean
      - name: legend
        type: boolean
      - name: isLegendExpanded
        type: boolean
      - name: legendRule
      - name: legendImage
        type: url
      - name: iconUrl
        type: url
      - name: metadataUrl
        type: url
      - name: disclaimer
      - name: isChecked
        type: boolean
      - name: identifierAttributeField
      - name: maxResolution
        type: float
      - name: minResolution
        type: float
      - name: opacity
        type: float
      - name: thumbnail
        type: url
      - name: timeAttribute
      - name: lastUpdateDateColumn
      - name: lastUpdateUserColumn
      - name: snappingConfig
        type: json
      - name: geometryValidation  # V1
        type: boolean
      - name: excludeProperties  # not yet used
      # WMS
      - name: directedFilterAttributes
        type: list
      - name: enumeratedAttributes
        type: list
      # WMTS layers
      - name: ogcServer
      - name: wmsLayers
      - name: queryLayers
      - name: printLayers

    # The list of functionalities that can be configured
    # through the admin interface.
    available_functionalities:
      - default_basemap
      - default_theme
      - print_template
      - mapserver_substitution
      - filterable_layers
      - preset_layer_filter
      - open_panel

  functionalities:
    # Functionalities that are accessible to anonymous
    # users.
    anonymous:
      print_template:
        - 1 A4 portrait
        - 2 A3 landscape
      default_basemap: plan

      # The name of the theme to use as the default theme.
      # The default theme is the theme loaded when no
      # theme name is specified in the mobile app URL. If unset
      # then there is no default theme, and no theme information
      # will be passed to the config.js template.
      default_theme:

    # Functionalities that are accessible to authenticated
    # users with no associated functionalities in the
    # database.
    registered: {}

    # Functionalities that are made available to Mako templates and loginuser.
    available_in_templates:
      - default_basemap
      - default_theme
      - filterable_layers
      - print_template
      - preset_layer_filter
      - open_panel

  urllogin: {}

  mapserverproxy:
    default_ogc_server: source for image/png

  tinyowsproxy:
    # URL to internal TinyOWS instance
    tinyows_url: '{TINYOWS_URL}'

    # If the `online_resource` url in the TinyOWS configuration is not set
    # to the TinyOWS proxy url (e.g. when the service is also used without
    # the proxy), the proxy can replace the original `online_resource`
    # url with the proxy url.
    # proxy_online_resource: http://{host}{entry_point}/tinyows_proxy
    # online_resource: http://localhost{entry_point}/tinyows

    # When running a c2cgeoportal appl. in debug mode (with `make serve`)
    # the host has to be set explicitly in a vhost environment.
    # tinyows_host: {host}

  resourceproxy:
    # list of urls from which it is safe to load content
    targets:
    #   exempletargetname: http://www.camptocamp.com/?param1=%s&param2=%s

  fulltextsearch:
    defaultlimit: 30
    maxlimit: 200
    languages:
      fr: french
      en: english
      de: german

  servers:
    internal: http://localhost/
    local: '{web_protocol}://{host}{entry_point}'
    mapserver: '{MAPSERVER_URL}'

  host_forward_host: []

  # The "raster web services" configuration. See the "raster"
  # chapter in the integrator documentation.
  raster: {}

  # Used by enumeration in the query builder
  layers:
    geometry_validation: True

  # Used by reset_password and shortener to send emails
  smtp: {}

  # Used to send an email on password reset
  reset_password: {}

  # The shortener base configuration
  shortener:
    # The base of created URL
    base_url: '{web_protocol}://{host}{entry_point}/s/'
    allowed_hosts:
      - '{host}'

  # Define whether the MapServer proxy should hide the OGC capabilities.
  hide_capabilities: false

  # For print proxy
  print_url: '{PRINT_URL}'

  pdfreport:
    print_url: '{PRINT_URL}'

  # For base layers
  tiles_url:
    - '{web_protocol}://a.tiles.{host}/tiles'
    - '{web_protocol}://b.tiles.{host}/tiles'
    - '{web_protocol}://c.tiles.{host}/tiles'
    - '{web_protocol}://d.tiles.{host}/tiles'
  wmtscapabilities_path: '{WMTSCAPABILITIES_PATH}'

  ogcproxy_enable: false

  # Control the HTTP headers
  headers:
    index: &header
      access_control_max_age: 600  # 10 minutes
      access_control_allow_origin:
        - "*"
    api: *header
    profile: *header
    raster: *header
    echo: *header
    csvecho: *header
    exportgpxkml: *header
    error: *header
    themes: &auth_header
      access_control_max_age: 600  # 10 minutes
      access_control_allow_origin:
        - "{web_protocol}://{host}/"
        - "*"
    config: *auth_header
    print: *auth_header
    fulltextsearch: *auth_header
    mapserver: *auth_header
    tinyows: *auth_header
    layers: *auth_header
    shortener: *auth_header
    login:
      access_control_max_age: 600  # 10 minutes
      access_control_allow_origin:
        - "{web_protocol}://{host}/"

  # Checker configuration
  checker:
    fulltextsearch:
      level: 1
      search: text to search
    lang:
      level: 1
      files: [ngeo, cgxp-api]
    phantomjs:
      disable: []
      routes:
        - name: desktop
          params:
            no_redirect: "true"
          level: 1
        - name: mobile
          params:
            no_redirect: "true"
          level: 3
          # - name: desktop
          #   params:
          #     no_redirect: "true"
          #     debug: "true"
          #   level: 3
          # - name: mobile
          #   params:
          #     no_redirect: "true"
          #     debug: "true"
          #   level: 3
    routes:
      disable: []
      routes:
        # - name: apijs
        #   level: 3
        # - name: xapijs
        #   level: 3
        - name: printproxy_capabilities
          level: 3
        - name: mapserverproxy
          display_name: mapserverproxy_wms
          params:
            SERVICE: WMS
            VERSION: 1.1.1
            REQUEST: GetCapabilities
          level: 3
        - name: mapserverproxy
          display_name: mapserverproxy_wfs
          params:
            SERVICE: WFS
            VERSION: 1.1.0
            REQUEST: GetCapabilities
          level: 3
    themes:
      params:
        version: "2"
      level: 1
      interfaces: {}
    print:
      spec: {}
      level: 1

  # Check collector configuration
  check_collector:
    hosts: []
    max_level: 1
    level: 1

  # What web page is authorized to use the API
  authorized_referers:
    - '{web_protocol}://{host}{entry_point}'

  # Hooks that can be called at different moments in the life of the
  # application. The value is the full python name
  # (full.module.path.function_name) of the function to call
  hooks: {}
  #   after_settings: {{package}}.after_settings_hook
  # Called just after the settings have been loaded. Allows to modify
  # the settings at runtime (they are constructed at build time).
  # The function receives one parameter: the settings object.

  # Statistics are disabled by default
  stats: {}

  db_chooser:
    # List of {method path} regexes to force the usage of the master, even for GET and OPTIONS
    # This supersedes the slave list.
    master:
      - GET /short/.*   # The shortener updates the last_hit column on GET
    # List of {method path} regexes to force the usage of the slave
    slave:
      - \w+ /printproxy/.*  # The print proxy is never writing to the DB


interpreted:
  python:
    - authtkt.secret
    - ps
    - directory
    - interfaces
  node:
    vars:
      - closure_library_path
    cmd: ["node", "-e"]
    ignore_error: true

environment:
  - GEOMAPFISH_VERSION
  - DOCKER_BASE
  - DOCKER_TAG
  - DEVELOPMENT
  - WMTSCAPABILITIES_PATH
  - BUILD_VOLUME_NAME
  - PROJECT_DIRECTORY
  - PYTHON_PATH

runtime_environment:
  - VISIBLE_WEB_HOST
  - VISIBLE_WEB_PROTOCOL
  - VISIBLE_ENTRY_POINT
  - PGHOST
  - PGHOST_SLAVE
  - PGPORT
  - PGUSER
  - PGPASSWORD
  - PGDATABASE
  - PGSCHEMA
  - PGSCHEMA_STATIC
  - TINYOWS_URL
  - MAPSERVER_URL
  - PRINT_URL
