---
version: 2.1
jobs:
  main:
    environment: &environment
      MAIN_BRANCH: master
      MAJOR_VERSION: 2.5
      CI: true
      PATH: /usr/local/bin:/usr/local/sbin:/usr/sbin:/usr/bin:/sbin:/bin:/home/circleci/.local/bin
    docker:
      - image: circleci/python:3.7
    steps:
      # Versions
      - run: docker --version
      - run: docker-compose --version
      - run: git --version
      - run: python --version
      - run: python -m pip --version

      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      # Global simple lint
      - run: git --no-pager diff --check a6eacf93706d94606fb3c68a671f8254aea48e3b
      - run: python ci/test-eof-newline
      - run: python -m pip install --user --requirement=ci/requirements.txt
      - run: >
          codespell --quiet-level=2 --check-filenames --ignore-words=spell-ignore-words.txt \
          $(find -name .git -prune -print)
      - run: >
          yamllint --strict --config-file=yamllint.yaml -s
          $(find -name .git -prune -or \( -name "*.yml" -or -name "*.yaml" \) -print)

      # Build images
      - run: >
          docker build --target=build --tag=camptocamp/geomapfish-tests
          --build-arg=MAJOR_VERSION=${MAJOR_VERSION} --build-arg=VERSION=$(ci/release-tag) .
      - run: >
          docker build --target=builder --tag=camptocamp/geomapfish-build
          --build-arg=MAJOR_VERSION=${MAJOR_VERSION} --build-arg=VERSION=$(ci/release-tag) .
      - run: >
          docker build --target=runner --tag=camptocamp/geomapfish
          --build-arg=MAJOR_VERSION=${MAJOR_VERSION} --build-arg=VERSION=$(ci/release-tag) .
      - run: >
          docker build --target=upgrader --tag=camptocamp/geomapfish-scaffolds
          --build-arg=MAJOR_VERSION=${MAJOR_VERSION} --build-arg=VERSION=$(ci/release-tag) .
      - run: >
          docker build --target=checks
          --build-arg=MAJOR_VERSION=${MAJOR_VERSION} --build-arg=VERSION=$(ci/release-tag) .
      - run: >
          docker build --tag=camptocamp/geomapfish-config-build
          --build-arg=VERSION=$(ci/release-tag) docker/config

      # Build QGIS images
      - run: >
          docker build --target=lint --build-arg=VERSION=latest docker/qgisserver
      - run: >
          docker build --target=runner --build-arg=VERSION=latest
          --tag=camptocamp/geomapfish-qgisserver:gmf${MAJOR_VERSION}-qgismaster docker/qgisserver
      # LTR
      - run: >
          docker build --target=runner --build-arg=VERSION=3.4
          --tag=camptocamp/geomapfish-qgisserver:gmf${MAJOR_VERSION}-qgis3.4 docker/qgisserver
      - run: >
          docker build --target=runner --build-arg=VERSION=3.8
          --tag=camptocamp/geomapfish-qgisserver:gmf${MAJOR_VERSION}-qgis3.8 docker/qgisserver

      # Tests
      - run: ci/preparetest
      - run: >
          ci/run-tests tests '' /app/c2cgeoportal/commons/c2cgeoportal_commons
          commons /app/c2cgeoportal/commons/tests
      - run: >
          ci/run-tests tests '--append' /app/c2cgeoportal/geoportal/c2cgeoportal_geoportal
          geoportal /app/c2cgeoportal/geoportal/tests
      - run: >
          ci/run-tests tests '--append' /app/c2cgeoportal/admin/c2cgeoportal_admin
          admin /app/c2cgeoportal/admin/tests
      - run: >
          ci/run-tests qgisserver-tests '' /var/www/plugins/geomapfish_qgisserver
          qgis /src/tests/functional
      - run:
          name: Extract tests artifacts
          command: |
              docker-compose exec tests coverage report
              docker-compose exec tests coverage html --directory=/tmp/coverage
              docker-compose exec qgisserver-tests coverage report
              docker-compose exec qgisserver-tests coverage html --directory=/tmp/coverage
              mkdir --parent artifacts/geoportal-coverage
              mkdir --parent artifacts/qgisserver-plugin-coverage
              mkdir --parent test-reports
              docker cp c2cgeoportal_tests_1:/tmp/commons.xml test-reports/
              docker cp c2cgeoportal_tests_1:/tmp/geoportal.xml test-reports/
              docker cp c2cgeoportal_tests_1:/tmp/admin.xml test-reports/
              docker cp c2cgeoportal_qgisserver-tests_1:/tmp/qgis.xml test-reports/
              docker cp c2cgeoportal_tests_1:/tmp/coverage/ artifacts/geoportal-coverage/
              docker cp c2cgeoportal_qgisserver-tests_1:/tmp/coverage/ artifacts/qgisserver-plugin-coverage/
          when: always
      - run: docker-compose down

      # Documentation
      - run: >
            docker build --tag=camptocamp/geomapfish-doc
            --build-arg=MAJOR_VERSION=${MAJOR_VERSION}
            --build-arg=MAIN_BRANCH=${MAIN_BRANCH}
            doc

      - run:
          command: docker images
          when: always

      - run:
          name: Extract documentation
          command: ci/extract-documentation artifacts/documentations/
          when: always

      - store_artifacts:
          path: artifacts
          destination: results
      - store_test_results:
          path: test-reports

  test-app-upgrade:
    environment: *environment
    machine: true
    steps:
      - run: &python
          name: Install Python 3.7
          command: |
            sudo killall -9 apt-get || true
            sudo apt-get update
            sudo apt-get install python3-pip
            python3 --version
            python3 -m pip --version
      - checkout
      - run: python3 -m pip install --user --requirement=ci/requirements.txt

      # Test App
      - run: ci/test-app

      # Test Upgrade
      - run: |
          docker build --target=builder --tag=camptocamp/geomapfish-build:$(ci/release-tag) \
          --build-arg=MAJOR_VERSION=${MAJOR_VERSION} --build-arg=VERSION=$(ci/release-tag) .
          docker build --target=runner --tag=camptocamp/geomapfish:$(ci/release-tag) \
          --build-arg=MAJOR_VERSION=${MAJOR_VERSION} --build-arg=VERSION=$(ci/release-tag) .
          docker build --target=upgrader --tag=camptocamp/geomapfish-scaffolds \
          --build-arg=MAJOR_VERSION=${MAJOR_VERSION} --build-arg=VERSION=$(ci/release-tag) .
          docker build --tag=camptocamp/geomapfish-config-build:$(ci/release-tag) \
          --build-arg=VERSION=$(ci/release-tag) docker/config
      - run: ci/test-upgrade init ${HOME}/workspace
      - run: ci/test-upgrade 240 ${HOME}/workspace
      - run: ci/test-upgrade 25 ${HOME}/workspace
      - run: ci/test-upgrade cleanup ${HOME}/workspace

  publish-nonmain:
    environment: *environment
    machine: true
    steps:
      - run: *python
      - checkout
      - run: &init-git
          name: Init Git
          command: |
            git remote set-url origin https://${GITHUB_TOKEN}@github.com/camptocamp/c2cgeoportal
            git config user.email "<ci@camptocamp.com>"
            git config user.name "CI"
            git fetch origin
      - deploy: &publish-docker-pip
          name: Push to Docker hub and Pypi
          command: |
            docker build --target=builder --tag=camptocamp/geomapfish-build \
            --build-arg=MAJOR_VERSION=${MAJOR_VERSION} --build-arg=VERSION=$(ci/release-tag) .
            docker build --target=runner --tag=camptocamp/geomapfish \
            --build-arg=MAJOR_VERSION=${MAJOR_VERSION} --build-arg=VERSION=$(ci/release-tag) .
            docker build --target=upgrader --tag=camptocamp/geomapfish-scaffolds \
            --build-arg=MAJOR_VERSION=${MAJOR_VERSION} --build-arg=VERSION=$(ci/release-tag) .
            docker build --tag=camptocamp/geomapfish-config-build \
            --build-arg=VERSION=$(ci/release-tag) docker/config
            docker build --target=runner --build-arg=VERSION=latest \
            --tag=camptocamp/geomapfish-qgisserver:gmf${MAJOR_VERSION}-qgismaster \
            docker/qgisserver
            # LTR
            docker build --target=runner --build-arg=VERSION=3.4 \
            --tag=camptocamp/geomapfish-qgisserver:gmf${MAJOR_VERSION}-qgis3.4 \
            docker/qgisserver
            docker build --target=runner --build-arg=VERSION=3.6 \
            --tag=camptocamp/geomapfish-qgisserver:gmf${MAJOR_VERSION}-qgis3.6 \
            docker/qgisserver
            docker build --target=runner --build-arg=VERSION=3.8 \
            --tag=camptocamp/geomapfish-qgisserver:gmf${MAJOR_VERSION}-qgis3.8 \
            docker/qgisserver
            ci/create-new-project ${HOME}/workspace geomapfish
            ci/publish

  publish:
    environment: *environment
    machine: true
    steps:
      - run: *python
      - checkout
      - run: *init-git
      - run:
          name: Clean Docker hub tags
          command: ci/clean-dockerhub-tags
      - deploy: *publish-docker-pip
      - deploy:
          name: Push to Transifex
          command: |
            docker build --target=build --tag=transifex --build-arg=MAJOR_VERSION=${MAJOR_VERSION} .
            docker run --name=transifex -ti --rm --detach transifex tail -f /dev/null
            docker exec transifex bash -c "echo \"[https://www.transifex.com]\" > ~/.transifexrc"
            docker exec transifex bash -c "echo \"hostname = https://www.transifex.com\" >> ~/.transifexrc"
            docker exec transifex bash -c "echo \"username = ${TRANSIFEX_USERNAME}\" >> ~/.transifexrc"
            docker exec transifex bash -c "echo \"password = ${TRANSIFEX_PASSWORD}\" >> ~/.transifexrc"
            docker exec transifex bash -c "echo \"token =\" >> ~/.transifexrc"
            docker exec transifex make transifex-send
            docker stop transifex
      - deploy:
          name: Publish documentation to GitHub.io
          command: |
            ci/publish-documentation

workflows:
  version: 2
  full:
    jobs:
      - main
      - test-app-upgrade
      - publish:
          filters:
            branches:
              only: &main-branches
                - master
                - /[0-9]\.[0-9]/
          requires:
            - main
            - test-app-upgrade
      - publish-nonmain:
          filters:
            branches:
              ignore: *main-branches
          requires:
            - main
            - test-app-upgrade
