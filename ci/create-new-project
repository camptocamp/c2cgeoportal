#!/bin/bash -ex

TAG=$(ci/release-tag)
docker build --target=builder --tag=camptocamp/geomapfish-build:${TAG} \
    --build-arg=MAJOR_VERSION=${MAJOR_VERSION} .
docker build --target=runner --tag=camptocamp/geomapfish:${TAG} \
    --build-arg=MAJOR_VERSION=${MAJOR_VERSION} --build-arg=VERSION=${TAG} .
docker build --target=upgrader --tag=camptocamp/geomapfish-scaffolds:${TAG} \
    --build-arg=MAJOR_VERSION=${MAJOR_VERSION} --build-arg=VERSION=${TAG} .
docker build --tag=camptocamp/geomapfish-config-build:${TAG} docker/config
WORKSPACE=$1
BASE_APP=false
if [ $# -ge 2 ]
then
    PACKAGE=$2
    BASE_APP=true
else
    PACKAGE=testgeomapfishapp
fi
rm -rf ${WORKSPACE}/${PACKAGE}
mkdir --parent ${WORKSPACE}/${PACKAGE}

DOCKER_RUN_ARGS="--env=SRID=21781 --env=EXTENT=489246.36,78873.44,837119.76,296543.14 \
    --volume=${WORKSPACE}/${PACKAGE}:/src/${PACKAGE} camptocamp/geomapfish-scaffolds:${TAG}"
PCREATE_CMD="run $(id -u) $(id -g) /src pcreate --ignore-conflicting-name --overwrite \
    --package-name ${PACKAGE} /src/${PACKAGE}"
docker run --rm -ti ${DOCKER_RUN_ARGS} ${PCREATE_CMD} --scaffold=c2cgeoportal_create
docker run --rm -ti ${DOCKER_RUN_ARGS} ${PCREATE_CMD} --scaffold=c2cgeoportal_update

if [ $BASE_APP != true ]
then
    # Copy files for CI build and tests
    mv ${WORKSPACE}/${PACKAGE}/geoportal/vars.yaml ${WORKSPACE}/${PACKAGE}/geoportal/vars_origin.yaml
    cp ci/vars.yaml ${WORKSPACE}/${PACKAGE}/geoportal/
    mkdir -p ${WORKSPACE}/${PACKAGE}/geoportal/ci
    cp ci/waitwsgi ${WORKSPACE}/${PACKAGE}/geoportal/ci
    cp ci/test-new-project ${WORKSPACE}/${PACKAGE}/geoportal/ci
    mkdir -p ${WORKSPACE}/${PACKAGE}/ci
    cp ci/run-dc-logs ${WORKSPACE}/${PACKAGE}/ci
fi

cd ${WORKSPACE}/${PACKAGE}

if [ $BASE_APP == true ]
then
    find -name *desktop_alt*
#    for interface in desktop_alt mobile_alt oeedit
    for interface in desktop_alt mobile_alt
    do
        for file in \
            geoportal/${PACKAGE}_geoportal/static-ngeo/js/apps/${interface}.html.ejs \
            geoportal/${PACKAGE}_geoportal/static-ngeo/js/apps/Controller${interface}.js \
            geoportal/${PACKAGE}_geoportal/static-ngeo/js/apps/sass/vars_${interface}.scss \
            geoportal/${PACKAGE}_geoportal/static-ngeo/js/apps/sass/${interface}.scss
        do
            cp CONST_create_template/${file} ${file}
        done
#        sed -i '1iNGEO_INTERFACES ?= desktop mobile iframe_api desktop_alt mobile_alt oeedit' geoportal/Makefile
        sed -i '1iNGEO_INTERFACES ?= desktop mobile iframe_api desktop_alt mobile_alt' geoportal/Makefile
    done
fi

# Init Git repository
git init
git config user.email ci@camptocamp.com
git config user.name CI
git remote add origin . # add a fake remote
git add --all
git commit --quiet --message='Initial commit'
git clean -fX

# Build
if [ $BASE_APP == false ]
then
    docker build --tag=camptocamp/${PACKAGE}-config --build-arg=PGSCHEMA=main .
    docker build --tag=camptocamp/${PACKAGE}-geoportal --build-arg=GIT_HASH=$(git rev-parse HEAD) geoportal
else
    docker build --tag=camptocamp/${PACKAGE}-config:${TAG} --build-arg=PGSCHEMA=main .
    docker build --tag=camptocamp/${PACKAGE}-geoportal:${TAG} --build-arg=GIT_HASH=$(git rev-parse HEAD) geoportal
fi
