#!/bin/bash -ex

TAG=$(ci/release-tag)
VERSION=${TAG} DOCKER_TAG=${TAG} make build-tools
VERSION=${TAG} DOCKER_TAG=${TAG} make build-runner
VERSION=${TAG} DOCKER_TAG=${TAG} make build-config

docker tag camptocamp/geomapfish:${TAG} camptocamp/geomapfish
docker build --target=runner --build-arg=VERSION=3.10 \
    --tag=camptocamp/geomapfish-qgisserver:gmf${TAG}-qgis3.10 \
    docker/qgisserver

WORKSPACE=$1
BASE_APP=false
if [ $# -ge 2 ]
then
    PACKAGE=$2
    BASE_APP=true
else
    PACKAGE=testgeomapfishapp
fi
rm -rf ${WORKSPACE}/${PACKAGE}
mkdir --parent ${WORKSPACE}/${PACKAGE}

DOCKER_RUN_ENV_ARGS="--env=SRID=2056 --env=EXTENT=2489246.36,1078873.44,2837119.76,1296543.14"
DOCKER_RUN_ARGS="--volume=${WORKSPACE}/${PACKAGE}:/src/${PACKAGE} camptocamp/geomapfish-tools:${TAG}"
PCREATE_CMD="run $(id -u) $(id -g) /src pcreate --ignore-conflicting-name --overwrite ${PACKAGE}"
docker run --rm ${DOCKER_RUN_ENV_ARGS} ${DOCKER_RUN_ARGS} ${PCREATE_CMD} --scaffold=c2cgeoportal_create
docker run --rm ${DOCKER_RUN_ARGS} ${PCREATE_CMD} --scaffold=c2cgeoportal_update

if [ $BASE_APP != true ]
then
    # Copy files for CI build and tests
    mv ${WORKSPACE}/${PACKAGE}/geoportal/vars.yaml ${WORKSPACE}/${PACKAGE}/geoportal/vars_origin.yaml
    cp ci/vars.yaml ${WORKSPACE}/${PACKAGE}/geoportal/
    mkdir -p ${WORKSPACE}/${PACKAGE}/geoportal/ci
    cp ci/waitwsgi ${WORKSPACE}/${PACKAGE}/geoportal/ci
    cp ci/test-new-project ${WORKSPACE}/${PACKAGE}/geoportal/ci
    mkdir -p ${WORKSPACE}/${PACKAGE}/ci
    cp ci/run-dc-logs ${WORKSPACE}/${PACKAGE}/ci
    echo "PGSSLMODE=prefer" >> ${WORKSPACE}/${PACKAGE}/env.project
fi

cd ${WORKSPACE}/${PACKAGE}
echo 'PGHOST=db' >> env.project
echo 'PGHOST_SLAVE=db' >> env.project
echo 'PGPORT=5432' >> env.project
echo 'PGPORT_SLAVE=5432' >> env.project
echo 'PGUSER=www-data' >> env.project
echo 'PGPASSWORD=www-data' >> env.project

if [ $BASE_APP == true ]
then
    find -name *desktop_alt*
#    for interface in desktop_alt mobile_alt oeedit
    for interface in desktop_alt mobile_alt
    do
        for file in \
            geoportal/${PACKAGE}_geoportal/static-ngeo/js/apps/${interface}.html.ejs \
            geoportal/${PACKAGE}_geoportal/static-ngeo/js/apps/Controller${interface}.js \
            geoportal/${PACKAGE}_geoportal/static-ngeo/js/apps/sass/vars_${interface}.scss \
            geoportal/${PACKAGE}_geoportal/static-ngeo/js/apps/sass/${interface}.scss
        do
            cp CONST_create_template/${file} ${file}
        done
#        sed -i '1iNGEO_INTERFACES ?= desktop mobile iframe_api desktop_alt mobile_alt oeedit' geoportal/Makefile
        sed -i '1iNGEO_INTERFACES ?= desktop mobile iframe_api desktop_alt mobile_alt' geoportal/Makefile
    done
fi

# Init Git repository
git init
git config user.email ci@camptocamp.com
git config user.name CI
git remote add origin . # add a fake remote
git add --all
git commit --quiet --message='Initial commit'
git clean -fX
