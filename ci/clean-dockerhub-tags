#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import json
import os
import re
import sys

import requests

token = requests.post(
    "https://hub.docker.com/v2/users/login/",
    headers={"Content-Type": "application/json"},
    data=json.dumps({"username": os.environ["USERNAME"], "password": os.environ["PASSWORD"]}),
).json()["token"]


with open(os.environ["GITHUB_EVENT_PATH"]) as event_file:
    ref = json.loads(event_file.read())["ref"]


fail = False


def clean_images(docker_image, tag):
    global fail
    print("Delete image 'camptocamp/{}:{}'.".format(docker_image, tag))

    response = requests.head(
        "https://hub.docker.com/v2/repositories/camptocamp/{image}/tags/{tag}/".format(
            image=docker_image, tag=tag,
        ),
        headers={"Authorization": "JWT " + token},
    )
    if response.status_code == 404:
        return
    if not response.ok:
        print("Error checking image 'camptocamp/{}:{}' status.".format(docker_image, tag))
        print(response.text)
        fail = True
        return

    response = requests.delete(
        "https://hub.docker.com/v2/repositories/camptocamp/{image}/tags/{tag}/".format(
            image=docker_image, tag=tag,
        ),
        headers={"Authorization": "JWT " + token},
    )
    if not response.ok:
        print("Error while deleting image 'camptocamp/{}:{}'.".format(docker_image, tag))
        print(response.text)
        fail = True


response = requests.get(
    "https://hub.docker.com/api/content/v1/products/search?page_size=10&q=geomapfish&type=image",
    headers={"Search-Version": "v3"},
)
if not response.ok:
    print("Error while searchng for GeoMapFish images.")
    print(response.text)
    fail = True
for image in response.json()["summaries"]:
    if image["name"].startswith("camptocamp/"):
        clean_images(image["name"], ref)


response = requests.get(
    "https://hub.docker.com/v2/repositories/camptocamp/geomapfish-qgisserver/tags",
    headers={"Authorization": "JWT " + token},
)
if not response.ok:
    print("Error while getting GeoMapFish - QGIS server tags.")
    print(response.text)
    fail = True
for tag in response.json()["results"]:
    if tag["name"].startswith("gmf{}-".format(ref)):
        clean_images("geomapfish-qgisserver", tag["name"])

if fail:
    sys.exit(2)
