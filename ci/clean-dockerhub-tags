#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import json
import os
import sys

import requests

token = requests.post(
    "https://hub.docker.com/v2/users/login/",
    headers={"Content-Type": "application/json"},
    data=json.dumps({"username": os.environ["USERNAME"], "password": os.environ["PASSWORD"]}),
).json()["token"]


with open(os.environ["GITHUB_EVENT_PATH"]) as event_file:
    ref = json.loads(event_file.read())["ref"]

print("Clean ref '{}'.".format(ref))

fail = False


def clean_images(docker_image, tag):
    global fail

    response_ = requests.head(
        "https://hub.docker.com/v2/repositories/{image}/tags/{tag}/".format(image=docker_image, tag=tag),
        headers={"Authorization": "JWT " + token},
    )
    if response_.status_code == 404:
        return

    print("Delete image '{}:{}'.".format(docker_image, tag))

    if not response_.ok:
        print("Error checking image '{}:{}' status.".format(docker_image, tag))
        print(response_.text)
        fail = True
        return

    response_ = requests.delete(
        "https://hub.docker.com/v2/repositories/{image}/tags/{tag}/".format(image=docker_image, tag=tag),
        headers={"Authorization": "JWT " + token},
    )
    if not response_.ok:
        print("Error while deleting image '{}:{}'.".format(docker_image, tag))
        print(response_.text)
        fail = True


response = requests.get(
    "https://hub.docker.com/api/content/v1/products/search?page_size=10&q=geomapfish&type=image",
    headers={"Search-Version": "v3"},
)
if not response.ok:
    print("Error while searchng for GeoMapFish images.")
    print(response.text)
    fail = True
for image in response.json()["summaries"]:
    if image["name"].startswith("camptocamp/"):
        clean_images(image["name"], ref.replace("/", "_"))
        clean_images(image["name"], ref.replace("/", "-"))


response = requests.get(
    "https://hub.docker.com/v2/repositories/camptocamp/geomapfish-qgisserver/tags",
    headers={"Authorization": "JWT " + token},
)
if not response.ok:
    print("Error while getting GeoMapFish - QGIS server tags.")
    print(response.text)
    fail = True
for tag_ in response.json()["results"]:
    if tag_["name"].startswith("gmf{}-".format(ref.replace("/", "_"))):
        clean_images("camptocamp/geomapfish-qgisserver", tag_["name"])
    if tag_["name"].startswith("gmf{}-".format(ref.replace("/", "-"))):
        clean_images("camptocamp/geomapfish-qgisserver", tag_["name"])

if fail:
    sys.exit(2)
