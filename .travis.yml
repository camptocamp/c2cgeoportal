---

dist: trusty
sudo: required

language: python
python:
  - "3.6"

service:
  - docker

env:
  global:
    - secure: "aZWcHZWV8lN2SNU2fcUsG8+fVQLOxwDUFYDvuftZALebRG2AHINTkbS31sKbeSwS19ZYpjcuVOKC9HxNAlnMxsdO1Nvv\
        FEbSJJD/yqq0V4EfTRqptZYsFCUou0eXIUWEnoFHD1nY3NhuPQjDoad995xU92z0BzwduxUAj28liu4="
    - DOCKER_USERNAME=sbrunner
    - secure: "SosPNhER7I5YnVZy7AoUjrs+P08S60fPje1sFgMdfRNRElI42oLgO6wk1nEFEGGjUevSLzpsDruy7z1m5ilzyMenO1hG\
        1lASf2BeeJC8rRz75MgRKnlf7Py6BA9GbNprzMdgxNPlUtrEkp9ExLvC7MZs7H0RvwxBgQmepQG5Mdg="
    - MAIN_BRANCH=master
    - MAJOR_VERSION=2.3

install:
  - sudo service postgresql stop
  - docker pull camptocamp/geomapfish-build-dev-travis:${TRAVIS_BUILD_NUMBER}
  - docker pull camptocamp/geomapfish-commons-travis:${TRAVIS_BUILD_NUMBER}
  - docker pull camptocamp/geomapfish-build-travis:${TRAVIS_BUILD_NUMBER}
  - docker tag camptocamp/geomapfish-build-dev-travis:${TRAVIS_BUILD_NUMBER}
      camptocamp/geomapfish-build-dev:${MAJOR_VERSION}
  - docker tag camptocamp/geomapfish-commons-travis:${TRAVIS_BUILD_NUMBER} camptocamp/geomapfish-commons:${MAJOR_VERSION}
  - docker tag camptocamp/geomapfish-build-travis:${TRAVIS_BUILD_NUMBER} camptocamp/geomapfish-build:${MAJOR_VERSION}
  - git config --global user.email travis@camptocamp.com
  - git config --global user.name Travis
  - python3 -m pip install --requirement=travis/requirements.txt

jobs:
  include:

    - stage: Prepare, first tests
      env: [JOB=test-commons]
      install:
        - sudo apt-get update
        - sudo apt-get autoremove postgis*
        - sudo apt-get autoremove postgresql*
        - sudo apt-get install postgresql-9.3-postgis-2.1
      before_script:
        - psql -c "CREATE USER \"www-data\" WITH PASSWORD 'www-data';" -U postgres
        - psql -c "CREATE DATABASE c2cgeoportal_tests WITH OWNER \"www-data\";" -U postgres
        - psql -d c2cgeoportal_tests -c "CREATE EXTENSION postgis;" -U postgres
      script:
        - cd commons
        - make check test

    - env: [JOB=test-admin]
      install:
        - sudo apt-get update
        - sudo apt-get autoremove postgis*
        - sudo apt-get autoremove postgresql*
        - sudo apt-get install postgresql-9.3-postgis-2.1
        - rm -rf ~/.nvm
        - git clone https://github.com/creationix/nvm.git ~/.nvm
        - (cd ~/.nvm && git checkout `git describe --abbrev=0 --tags`)
        - source ~/.nvm/nvm.sh
        - nvm install 6
        - npm -version
      before_script:
        - psql -c "CREATE USER \"www-data\" WITH PASSWORD 'www-data';" -U postgres
        - psql -c "CREATE DATABASE c2cgeoportal_tests WITH OWNER \"www-data\";" -U postgres
        - psql -d c2cgeoportal_tests -c "CREATE EXTENSION postgis;" -U postgres
      script:
        - cd admin
        - make check test

    - env: [JOB=build-docker-images]
      install:
        - docker --version
        - docker-compose --version
        - python3 -m pip install --requirement=travis/requirements.txt
      script:
        - docker build --tag camptocamp/geomapfish-build-dev:${MAJOR_VERSION} docker/build
        - docker tag camptocamp/geomapfish-build-dev:${MAJOR_VERSION} camptocamp/geomapfish-build-dev-travis:${TRAVIS_BUILD_NUMBER}
        - ./docker-run travis/empty-make.sh help
        - ./docker-run make build
        - "docker build --build-arg=GIT_TAG=${TRAVIS_TAG} --build-arg=MAJOR_VERSION=${MAJOR_VERSION} \
            --tag camptocamp/geomapfish-commons:${MAJOR_VERSION} commons"
        - docker tag camptocamp/geomapfish-commons:${MAJOR_VERSION} camptocamp/geomapfish-commons-travis:${TRAVIS_BUILD_NUMBER}
        - "docker build --build-arg=GIT_TAG=${TRAVIS_TAG} --build-arg=MAJOR_VERSION=${MAJOR_VERSION} \
            --tag camptocamp/geomapfish-build-travis:${TRAVIS_BUILD_NUMBER} geoportal"
        - docker login --username ${DOCKER_USERNAME} --password ${DOCKER_PASSWORD}
        - docker push camptocamp/geomapfish-build-dev-travis:${TRAVIS_BUILD_NUMBER}
        - docker push camptocamp/geomapfish-commons-travis:${TRAVIS_BUILD_NUMBER}
        - docker push camptocamp/geomapfish-build-travis:${TRAVIS_BUILD_NUMBER}

    - env: [JOB=lint]
      if: NOT repo = camptocamp/c2cgeoportal
      script:
        - ./docker-run make doc
        - ./docker-run make geoportal/c2cgeoportal_geoportal/locale/c2cgeoportal_geoportal.pot
        - ./docker-run make admin/c2cgeoportal_admin/locale/c2cgeoportal_admin.pot
        # lint
        - ./docker-run make flake8
        - ./docker-run make git-attributes
        - ./docker-run make quote
        - ./docker-run make spell
        - ./docker-run travis/test-eof-newline
        - ./docker-run travis/empty-make.sh build
        # Test return code
        - ./docker-run true
        - |
            if ./docker-run false
            then
                false
            fi
        - ./docker-compose-run true
        - |
            if ./docker-compose-run false
            then
                false
            fi
        - |
            [[ `./docker-run id` =~ uid=[0-9]+\(travis\)\ gid=[0-9]+\(geomapfish\)\ groups=[0-9]+\(geomapfish\) ]]

    - stage: Tests
      if: NOT repo = camptocamp/c2cgeoportal
      env: [JOB=test-c2cgeoportal]
      before_script:
        # Test c2cgeoportal
        - if [ ${TRAVIS_PULL_REQUEST} != "false" ] ; then git fetch origin ${TRAVIS_BRANCH}:${TRAVIS_BRANCH}; fi
      script:
        - ./docker-run make docker-compose.yaml
              geoportal/tests/functional/alembic.ini
              docker/test-mapserver/mapserver.map prepare-tests
        - ./docker-compose-run sleep 15
        - ./docker-compose-run alembic --config=geoportal/tests/functional/alembic.ini --name=main upgrade head
        - ./docker-compose-run alembic --config=geoportal/tests/functional/alembic.ini --name=static upgrade head
        - ./docker-compose-run make tests

    - env: [JOB=test-docker-app]
      if: NOT repo = camptocamp/c2cgeoportal
      before_script:
        - docker build --tag=external-db docker/test-external-db
        - travis/create-new-project.sh
        - travis/run-on.sh /tmp/travis/testgeomapfish/ ./docker-run travis/empty-make.sh -f travis.mk help
        - travis/run-on.sh /tmp/travis/testgeomapfish/ ./docker-run make --makefile=travis.mk build
        - travis/run-on.sh /tmp/travis/testgeomapfish/ docker-compose up -d
        - travis/waitwsgi http://localhost:8080/
      script:
        # Test new Docker project
        - travis/run-on.sh /tmp/travis/testgeomapfish/ ./docker-run travis/empty-make.sh -f travis.mk build
        - travis/run-on.sh /tmp/travis/testgeomapfish/ ./docker-run make --makefile=travis.mk checks
        - find
          /tmp/travis/testgeomapfish/geoportal/setup.py
          /tmp/travis/testgeomapfish/geoportal/testgeomapfish_geoportal/*.py
          /tmp/travis/testgeomapfish/geoportal/testgeomapfish_geoportal/views
          /tmp/travis/testgeomapfish/commons/setup.py /tmp/travis/testgeomapfish/commons/testgeomapfish_commons
          -name \*.py | xargs travis/squote
        - travis/test-new-project http://localhost:8080/c2c/health_check
        - travis/test-new-project http://localhost:8080/c2c/health_check?max_level=100
        - travis/test-new-project http://localhost:8080/layers/test/values/type enum
        - travis/run-on.sh /tmp/travis/testgeomapfish/ docker-compose logs
        - travis/run-on.sh /tmp/travis/testgeomapfish/ docker-compose down
        - travis/run-on.sh /tmp/travis/testgeomapfish/ ./docker-run travis/status.sh
        - "travis/run-on.sh /tmp/travis/testgeomapfish/ \
            ./docker-run make --makefile=empty-vars.mk geoportal/config.yaml"
        - "travis/run-on.sh /tmp/travis/testgeomapfish/ \
            ./docker-run make --makefile=travis.mk alembic.ini"
        - travis/run-on.sh /tmp/travis/testgeomapfish/ ./docker-compose-run sleep 15
        - "travis/run-on.sh /tmp/travis/testgeomapfish/ \
            ./docker-compose-run alembic --name=main upgrade head"
        - "travis/run-on.sh /tmp/travis/testgeomapfish/ \
            ./docker-compose-run alembic --name=static upgrade head"
        - "travis/run-on.sh /tmp/travis/testgeomapfish/ \
            ./docker-compose-run alembic --name=static downgrade base"
        - "travis/run-on.sh /tmp/travis/testgeomapfish/ \
            ./docker-compose-run alembic --name=main downgrade base"

    ## FOR NON DOCKER TESTS
    - stage: Tests
      env: [JOB=test-nondocker-app]
      before_script:
        - deactivate
        - sudo apt-get remove --assume-yes --force-yes python-zope.interface
        - "sudo aptitude install --assume-yes tree apache2 apache2-dev libapache2-mod-fcgid tomcat7 cgi-mapserver \
            python3-netifaces python3-pip python3-virtualenv libgdal-dev"
        # workaround: https://askubuntu.com/questions/569550/
        #    assertionerror-using-apache2-and-libapache2-mod-wsgi-py3-on-ubuntu-14-04-python
        - sudo python3 -m pip install mod_wsgi
        - sudo mod_wsgi-express install-module
        - echo "LoadModule wsgi_module /usr/lib/apache2/modules/mod_wsgi-py34.cpython-34m.so" > /tmp/wsgi_express.load
        - echo "WSGIPythonHome /usr/" > /tmp/wsgi_express.conf
        - sudo mv /tmp/wsgi_express.load /tmp/wsgi_express.conf /etc/apache2/mods-available/
        - sudo a2enmod wsgi_express
        - sudo service apache2 restart
        - sudo chmod o+rx /var/log/apache2/
        - sudo chmod o+r /var/log/apache2/*.log
        # Database for the GeoMapFish application
        - docker build --tag=camptocamp/c2cgeoportal-gis-db docker/gis-db
        - "docker run --env=POSTGRES_USER=www-data --env=POSTGRES_PASSWORD=www-data --env=POSTGRES_DB=geomapfish \
            --publish=5432:5432 --detach camptocamp/c2cgeoportal-gis-db"
        # - sudo service tomcat7 stop
        - docker build --tag=external-db docker/test-external-db
        - docker run --publish=5433:5432 --detach external-db ## FOR NON DOCKER TEST
        - mkdir /tmp/travis
        - travis/create-new-nondocker-project.sh
        - travis/run-on.sh /tmp/travis/nondockertestgeomapfish/ ./docker-run travis/empty-make.sh -f travis.mk help
        - travis/run-on.sh /tmp/travis/nondockertestgeomapfish/ ./docker-run make --makefile=travis.mk build
        - travis/run-on.sh /tmp/travis/nondockertestgeomapfish/ make --makefile=travis-nondocker.mk build
      script:
        # Test new non Docker project
        - travis/run-on.sh /tmp/travis/nondockertestgeomapfish/ ./docker-run travis/empty-make.sh -f travis.mk build
        - travis/run-on.sh /tmp/travis/nondockertestgeomapfish/ ./docker-run make --makefile=travis.mk checks
        - find
            /tmp/travis/testgeomapfish/geoportal/setup.py
            /tmp/travis/testgeomapfish/geoportal/testgeomapfish_geoportal/*.py
            /tmp/travis/testgeomapfish/geoportal/testgeomapfish_geoportal/views
            /tmp/travis/testgeomapfish/commons/setup.py /tmp/travis/testgeomapfish/commons/testgeomapfish_commons
            -name \*.py | xargs travis/squote
        - travis/test-new-project http://localhost/main/wsgi/c2c/health_check
        - travis/test-new-project http://localhost/main/wsgi/c2c/health_check?max_level=100
        - cat /var/log/apache2/error.log
        - cat /var/log/apache2/access.log
        - sudo cat /var/log/tomcat7/catalina.out
        - travis/run-on.sh /tmp/travis/nondockertestgeomapfish/ ./docker-run travis/status.sh
        - travis/run-on.sh /tmp/travis/nondockertestgeomapfish/ ./docker-run rm /build/c2ctemplate-cache.json
        - "travis/run-on.sh /tmp/travis/nondockertestgeomapfish/ \
            ./docker-run make --makefile=empty-vars.mk geoportal/config.yaml"
        - "travis/run-on.sh /tmp/travis/nondockertestgeomapfish/ \
            ./docker-run make --makefile=travis.mk alembic.ini"
        - "travis/run-on.sh /tmp/travis/nondockertestgeomapfish/ \
            ./docker-run alembic --name=main upgrade head"
        - "travis/run-on.sh /tmp/travis/nondockertestgeomapfish/ \
            ./docker-run alembic --name=static upgrade head"
        - "travis/run-on.sh /tmp/travis/nondockertestgeomapfish/ \
            ./docker-run alembic --name=static downgrade base"
        - "travis/run-on.sh /tmp/travis/nondockertestgeomapfish/ \
            ./docker-run alembic --name=main downgrade base"
        ## END FOR NON DOCKER TESTS

    - env: [JOB=test-upgrade]
      if: NOT repo = camptocamp/c2cgeoportal
      before_script:
        # database for the GeoMapFish application
        - docker build --tag=camptocamp/c2cgeoportal-gis-db docker/gis-db
        - "docker run --env=POSTGRES_USER=www-data --env=POSTGRES_PASSWORD=www-data --env=POSTGRES_DB=geomapfish \
            --publish=5432:5432 --detach camptocamp/c2cgeoportal-gis-db"
        - travis/test-upgrade-convert.sh init /tmp/travis
      script:
        # Test Upgrade an convert project
        - travis/test-upgrade-convert.sh docker /tmp/travis
        - travis/test-upgrade-convert.sh todocker /tmp/travis
        - travis/test-upgrade-convert.sh v220-todocker /tmp/travis
        - travis/test-upgrade-convert.sh cleanup /tmp/travis

    - env: [JOB=test-upgrade-nondocker]
      if: NOT repo = camptocamp/c2cgeoportal
      before_script:
        # database for the GeoMapFish application
        - docker build --tag=camptocamp/c2cgeoportal-gis-db docker/gis-db
        - "docker run --env=POSTGRES_USER=www-data --env=POSTGRES_PASSWORD=www-data --env=POSTGRES_DB=geomapfish \
            --publish=5432:5432 --detach camptocamp/c2cgeoportal-gis-db"
        - travis/test-upgrade-convert.sh init  /tmp/travis
      script:
        # Test Upgrade an convert project
        - travis/test-upgrade-convert.sh nondocker /tmp/travis
        - travis/test-upgrade-convert.sh tonondocker /tmp/travis
        - travis/test-upgrade-convert.sh v220-tonondocker /tmp/travis
        - travis/test-upgrade-convert.sh cleanup /tmp/travis

    - stage: Publish
      env: [JOB=publish-doc]
      script:
        - ./docker-run make doc
      after_success:
        - git config --global user.email travis@camptocamp.com
        - git config --global user.name Travis
         ./docker-run travis/codacy.sh
        - openssl aes-256-cbc -K $encrypted_ae821512cabf_key -iv $encrypted_ae821512cabf_iv
            -in deploy_key.enc -out ~/.ssh/id_rsa -d | true
        - chmod 600 ~/.ssh/id_rsa
        - git remote set-url origin git@github.com:camptocamp/c2cgeoportal.git
      if: NOT type = pull_request AND (branch = master OR branch ~= ^[0-9]\.[0-9]$)
      deploy:
        - provider: script
          script: travis/doc.sh
          skip_cleanup: true
          on:
            repo: camptocamp/c2cgeoportal

    - stage: Publish
      env: [JOB=publish-transifex]
      script:
        - |
          if [ "${TX_PASS}" != "" ]
          then
          echo "[https://www.transifex.com]" >> ~/.transifexrc
          echo "hostname = https://www.transifex.com" >> ~/.transifexrc
          echo "username = stephane.brunner@camptocamp.com" >> ~/.transifexrc
          echo "password = ${TX_PASS}" >> ~/.transifexrc
          echo "token =" >> ~/.transifexrc
          fi
          ./docker-run make transifex-send
      if: NOT type = pull_request AND (branch = master OR branch ~= ^[0-9]\.[0-9]$) AND repo = camptocamp/c2cgeoportal

    - stage: Publish
      env: [JOB=publish-pypi]
      install: []
      script:
        - ./docker-run make build
        - if [[ ${TRAVIS_TAG} =~ ^[0-9]+\.[0-9]+\..+$ ]] ; then
          sed --expression 's/version="[0-9]\+\.[0-9]\+",/version="'"${TRAVIS_TAG}"'",/g' --in-place setup.py;
          git diff;
          fi
      if: tag =~ ^[0-9]+\.[0-9]+\..+$ AND repo = camptocamp/c2cgeoportal
      deploy:
        - provider: pypi
          user: sbrunner
          password:
            secure: "dT4Z3Zk2SGq1BPl+mX2iI0ubK7veSPb1b0fGrKHpvC3gBxuGUDMhtHw5dgopdWWeUhZLzLoPpEZPyCHtJhE2vunG\
                wZfmJXkrqp/yC1meszZpDgBkpRWzx62u/f1+FmUdGPukvlqTfzgl/vJwertPRzX9Y4hanoFIDQvIKnp37Ls="
          skip_cleanup: true
          skip_upload_docs: true
          distributions: sdist bdist_wheel

    - stage: Publish
      env: [JOB=publish-docker]
      script:
        - travis/publish-docker
      if: NOT type = pull_request AND repo = camptocamp/c2cgeoportal

notifications:
  email:
    on_failure: change
